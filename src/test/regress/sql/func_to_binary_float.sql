-- For function TO_BINRY_FLOAT

-- create new schema
drop schema if exists func_tbf;
create schema func_tbf;
set search_path=func_tbf;

CREATE TABLE tbf (c1 int, c2 float4, c3 float8, c4 char(50), c5 varchar(50), c6 text);
INSERT INTO tbf VALUES (1, 1.23, 1.23, '1.23', '1.23', '1.23');
INSERT INTO tbf VALUES (2, 3.141567, 3.141567, '3.141567', '3.141567', '3.141567');
INSERT INTO tbf VALUES (3, 202405291733, 202405291733, '202405291733', '202405291733', '3.141567');
INSERT INTO tbf VALUES (4, NULL, NULL, NULL, NULL, NULL);
INSERT INTO tbf VALUES (5, NULL, NULL, 'tonight', '12.34yesterday', 'sunday6.66');
INSERT INTO tbf VALUES (6, CAST('NAN' as float4), CAST('NAN' as float8), 'nan', 'NAN', 'NaN');
INSERT INTO tbf VALUES (7, CAST('Inf' as float4), CAST('INF' as float8), 'Inf', 'INFINITY', 'INFINITE');
INSERT INTO tbf VALUES (8, 3.40282E+38, 1.79769313486231E+100, '3.40282E+38F', '3.40282E+38', '1.79769313486231E+308');

-- without default
SELECT c1, c2, TO_BINARY_FLOAT(c2) FROM tbf ORDER BY c1;
SELECT c1, c3, TO_BINARY_FLOAT(c3) FROM tbf ORDER BY c1; 

SELECT c1, c4, TO_BINARY_FLOAT(c4) FROM tbf WHERE c1 NOT IN (5, 8) ORDER BY c1;
SELECT c1, c4, TO_BINARY_FLOAT(c4) FROM tbf WHERE c1 = 5 ORDER BY c1; -- error: invalid number 
SELECT c1, c4, TO_BINARY_FLOAT(c4) FROM tbf WHERE c1 = 8 ORDER BY c1; -- error: invalid number

SELECT c1, c5, TO_BINARY_FLOAT(c5) FROM tbf WHERE c1 NOT IN (5) ORDER BY c1;
SELECT c1, c5, TO_BINARY_FLOAT(c5) FROM tbf WHERE c1 = 5 ORDER BY c1; -- error: invalid number 

SELECT c1, c6, TO_BINARY_FLOAT(c6) FROM tbf WHERE c1 NOT IN (5, 7) ORDER BY c1;
SELECT c1, c6, TO_BINARY_FLOAT(c6) FROM tbf WHERE c1 = 5 ORDER BY c1; -- error: invalid number 
SELECT c1, c6, TO_BINARY_FLOAT(c6) FROM tbf WHERE c1 = 7 ORDER BY c1; -- error: invalid number 

SELECT TO_BINARY_FLOAT(1.79769313486231E+100);
SELECT TO_BINARY_FLOAT(2.22507485850720E-100);
SELECT TO_BINARY_FLOAT(1.79769313486231E+310); -- error: overflow
SELECT TO_BINARY_FLOAT('1.79769313486231E+100'); 
SELECT TO_BINARY_FLOAT('2.22507485850720E-100');
SELECT TO_BINARY_FLOAT('1.79769313486231E+310'); 

-- with default
SELECT TO_BINARY_FLOAT(c1 DEFAULT 3.14 ON CONVERSION ERROR) FROM tbf ORDER By c1;
SELECT TO_BINARY_FLOAT(c1 DEFAULT '3.14' ON CONVERSION ERROR) FROM tbf ORDER By c1;
SELECT TO_BINARY_FLOAT(c1 DEFAULT '3.14FDW' ON CONVERSION ERROR) FROM tbf ORDER By c1;
SELECT TO_BINARY_FLOAT(c1 DEFAULT NULL ON CONVERSION ERROR) FROM tbf ORDER By c1;

SELECT TO_BINARY_FLOAT(3.14 DEFAULT c1 ON CONVERSION ERROR) FROM tbf ORDER By c1;  -- error, column can't be default param

SELECT TO_BINARY_FLOAT(c2 DEFAULT 3.14 ON CONVERSION ERROR) FROM tbf ORDER By c1;
SELECT TO_BINARY_FLOAT(c2 DEFAULT '3.14' ON CONVERSION ERROR) FROM tbf ORDER By c1;
SELECT TO_BINARY_FLOAT(c2 DEFAULT '3.14FDW' ON CONVERSION ERROR) FROM tbf ORDER By c1;
SELECT TO_BINARY_FLOAT(c2 DEFAULT NULL ON CONVERSION ERROR) FROM tbf ORDER By c1;

SELECT TO_BINARY_FLOAT(c3 DEFAULT 3.14 ON CONVERSION ERROR) FROM tbf ORDER By c1;
SELECT TO_BINARY_FLOAT(c3 DEFAULT '3.14' ON CONVERSION ERROR) FROM tbf ORDER By c1;
SELECT TO_BINARY_FLOAT(c3 DEFAULT '3.14FDW' ON CONVERSION ERROR) FROM tbf ORDER By c1;
SELECT TO_BINARY_FLOAT(c3 DEFAULT NULL ON CONVERSION ERROR) FROM tbf ORDER By c1;

SELECT TO_BINARY_FLOAT(c4 DEFAULT 3.14 ON CONVERSION ERROR) FROM tbf ORDER By c1;
SELECT TO_BINARY_FLOAT(c4 DEFAULT '3.14' ON CONVERSION ERROR) FROM tbf ORDER By c1;
SELECT TO_BINARY_FLOAT(c4 DEFAULT '3.14FDW' ON CONVERSION ERROR) FROM tbf ORDER By c1; -- error
SELECT TO_BINARY_FLOAT(c4 DEFAULT NULL ON CONVERSION ERROR) FROM tbf ORDER By c1;

SELECT TO_BINARY_FLOAT(c5 DEFAULT 3.14 ON CONVERSION ERROR) FROM tbf ORDER By c1;
SELECT TO_BINARY_FLOAT(c5 DEFAULT '3.14' ON CONVERSION ERROR) FROM tbf ORDER By c1;
SELECT TO_BINARY_FLOAT(c5 DEFAULT '3.14FDW' ON CONVERSION ERROR) FROM tbf ORDER By c1; -- error
SELECT TO_BINARY_FLOAT(c5 DEFAULT NULL ON CONVERSION ERROR) FROM tbf ORDER By c1;

SELECT TO_BINARY_FLOAT(c6 DEFAULT 3.14 ON CONVERSION ERROR) FROM tbf ORDER By c1;
SELECT TO_BINARY_FLOAT(c6 DEFAULT '3.14' ON CONVERSION ERROR) FROM tbf ORDER By c1;
SELECT TO_BINARY_FLOAT(c6 DEFAULT '3.14FDW' ON CONVERSION ERROR) FROM tbf ORDER By c1;  -- error
SELECT TO_BINARY_FLOAT(c6 DEFAULT NULL ON CONVERSION ERROR) FROM tbf ORDER By c1;

SELECT TO_BINARY_FLOAT(3.145 DEFAULT 'tomorrow' ON CONVERSION ERROR);
SELECT TO_BINARY_FLOAT('today' DEFAULT 3.14 ON CONVERSION ERROR);
SELECT TO_BINARY_FLOAT('3.14today' DEFAULT 3.14 ON CONVERSION ERROR);
SELECT TO_BINARY_FLOAT('  6.66  ' DEFAULT 3.14 ON CONVERSION ERROR);
SELECT TO_BINARY_FLOAT('today' DEFAULT 'roll' ON CONVERSION ERROR);  -- error
SELECT TO_BINARY_FLOAT(3.402E+100);
SELECT TO_BINARY_FLOAT('test' DEFAULT 3.04E+100 ON CONVERSION ERROR);

-- test default column
SELECT TO_BINARY_FLOAT(1.79E+309 DEFAULT y ON CONVERSION ERROR);
SELECT TO_BINARY_FLOAT(c3 DEFAULT c4 ON CONVERSION ERROR) FROM tbf ORDER By c1;
SELECT TO_BINARY_FLOAT(c4 DEFAULT c3 ON CONVERSION ERROR) FROM tbf ORDER By c1; -- error
SELECT TO_BINARY_FLOAT(3.14 DEFAULT c3 ON CONVERSION ERROR) FROM tbf ORDER By c1;
SELECT TO_BINARY_FLOAT(3.14 DEFAULT c4 ON CONVERSION ERROR) FROM tbf ORDER By c1;
SELECT TO_BINARY_FLOAT(3.14E+100 DEFAULT c3 ON CONVERSION ERROR) FROM tbf ORDER By c1;
SELECT TO_BINARY_FLOAT(3.14E+100 DEFAULT c4 ON CONVERSION ERROR) FROM tbf ORDER By c1;
SELECT TO_BINARY_FLOAT(3.14E+400 DEFAULT c3 ON CONVERSION ERROR) FROM tbf ORDER By c1; -- overflow
SELECT TO_BINARY_FLOAT(3.14E+400 DEFAULT c4 ON CONVERSION ERROR) FROM tbf ORDER By c1; -- overflow
SELECT TO_BINARY_FLOAT('3.14' DEFAULT c3 ON CONVERSION ERROR) FROM tbf ORDER By c1; -- error
SELECT TO_BINARY_FLOAT('3.14' DEFAULT c4 ON CONVERSION ERROR) FROM tbf ORDER By c1; -- error
SELECT TO_BINARY_FLOAT('3.14E+100' DEFAULT c3 ON CONVERSION ERROR) FROM tbf ORDER By c1; -- error
SELECT TO_BINARY_FLOAT('3.14E+100' DEFAULT c4 ON CONVERSION ERROR) FROM tbf ORDER By c1; -- error
SELECT TO_BINARY_FLOAT('3.14E+400' DEFAULT c3 ON CONVERSION ERROR) FROM tbf ORDER By c1; -- error
SELECT TO_BINARY_FLOAT('3.14E+400' DEFAULT c4 ON CONVERSION ERROR) FROM tbf ORDER By c1; -- error
SELECT TO_BINARY_FLOAT(NULL DEFAULT c3 ON CONVERSION ERROR) FROM tbf ORDER BY c1; -- error
SELECT TO_BINARY_FLOAT(NULL DEFAULT c4 ON CONVERSION ERROR) FROM tbf ORDER BY c1; -- error
SELECT TO_BINARY_FLOAT(3.14E+400 DEFAULT ab ON CONVERSION ERROR) FROM tbf ORDER BY c1; -- overflow
SELECT TO_BINARY_FLOAT('3.14E+400 DEFAULT' ab ON CONVERSION ERROR) FROM tbf ORDER BY c1; -- error

-- test overflow and null
SELECT TO_BINARY_FLOAT(1.79769313486231E+100 DEFAULT 3.14 ON CONVERSION ERROR);
SELECT TO_BINARY_FLOAT(2.22507485850720E-100 DEFAULT 3.14 ON CONVERSION ERROR);
SELECT TO_BINARY_FLOAT('1.79769313486231E+100' DEFAULT 3.14 ON CONVERSION ERROR);
SELECT TO_BINARY_FLOAT('2.22507485850720E-100' DEFAULT 3.14 ON CONVERSION ERROR);
SELECT TO_BINARY_FLOAT(1.79769313486231E+310 DEFAULT 3.14 ON CONVERSION ERROR);	-- error: overflow
SELECT TO_BINARY_FLOAT('1.79769313486231E+310' DEFAULT 3.14 ON CONVERSION ERROR); -- inf
SELECT TO_BINARY_FLOAT(3.14 DEFAULT 1.79769313486231E+100 ON CONVERSION ERROR); -- 3.14
SELECT TO_BINARY_FLOAT(3.14 DEFAULT '1.79769313486231E+100' ON CONVERSION ERROR);
SELECT TO_BINARY_FLOAT(3.14 DEFAULT 1.79769313486231E+310 ON CONVERSION ERROR); -- error: overflow
SELECT TO_BINARY_FLOAT(3.14 DEFAULT '1.79769313486231E+310' ON CONVERSION ERROR);
SELECT TO_BINARY_FLOAT(1.79769313486231E+100 DEFAULT NULL ON CONVERSION ERROR); -- inf
SELECT TO_BINARY_FLOAT('1.79769313486231E+100' DEFAULT NULL ON CONVERSION ERROR); -- inf
SELECT TO_BINARY_FLOAT(1.79769313486231E+310 DEFAULT NULL ON CONVERSION ERROR); -- error: overflow
SELECT TO_BINARY_FLOAT('1.79769313486231E+310' DEFAULT NULL ON CONVERSION ERROR); -- inf
SELECT TO_BINARY_FLOAT(NULL DEFAULT 1.79769313486231E+100 ON CONVERSION ERROR); -- NULL
SELECT TO_BINARY_FLOAT(NULL DEFAULT '1.79769313486231E+100' ON CONVERSION ERROR); -- NULL
SELECT TO_BINARY_FLOAT(NULL DEFAULT 1.79769313486231E+310 ON CONVERSION ERROR); -- error: overflow
SELECT TO_BINARY_FLOAT(NULL DEFAULT '1.79769313486231E+310' ON CONVERSION ERROR); -- NULL

-- test zero
SELECT TO_BINARY_FLOAT(0);
SELECT TO_BINARY_FLOAT('test' DEFAULT 0 ON CONVERSION ERROR);
SELECT TO_BINARY_FLOAT(0 DEFAULT 0 ON CONVERSION ERROR);
SELECT TO_BINARY_FLOAT(0 DEFAULT 123 ON CONVERSION ERROR);

-- test negetive
CREATE TABLE t_ne (c1 float4);
INSERT INTO t_ne VALUES (3.402E+38);
INSERT INTO t_ne VALUES (-3.402E+38);
SELECT c1, TO_BINARY_FLOAT(c1) FROM t_ne;
SELECT TO_BINARY_FLOAT(-3.402E+38);
SELECT TO_BINARY_FLOAT('test' DEFAULT 3.402E+38 ON CONVERSION ERROR);
SELECT TO_BINARY_FLOAT('test' DEFAULT -3.402E+38 ON CONVERSION ERROR);
SELECT TO_BINARY_FLOAT(-3.402E+100);
SELECT TO_BINARY_FLOAT('test' DEFAULT -3.04E+100 ON CONVERSION ERROR);

-- pbe
CREATE TABLE tbf2 (c1 int, func_info text, res float4);

PREPARE default_param_text2(int, text, text) AS INSERT INTO tbf2 VALUES ($1, CONCAT('TO_BINARY_FLOAT(', $2, ' DEFAULT ', $3, ' ON CONVERSION ERROR)'), TO_BINARY_FLOAT($2 DEFAULT $3 ON CONVERSION ERROR));
EXECUTE default_param_text2(1, '3.14', '6.66');
EXECUTE default_param_text2(2, '3.14#', '6.66');
EXECUTE default_param_text2(3, '#3.14', '6.66#');
EXECUTE default_param_text2(4, '  -3.14  ', '6.66');
EXECUTE default_param_text2(5, NULL, '6.66');
EXECUTE default_param_text2(6, '6.66', NULL);
EXECUTE default_param_text2(7, '1.79769313486231E+100', NULL);
EXECUTE default_param_text2(8, NULL, '1.79769313486231E+100');
EXECUTE default_param_text2(9, '1.79769313486231E+400', NULL);
EXECUTE default_param_text2(10, NULL, '1.79769313486231E+400');

PREPARE default_param_num2(int, float8, float8) AS INSERT INTO tbf2 VALUES ($1, CONCAT('TO_BINARY_FLOAT(', $2, ' DEFAULT ', $3, ' ON CONVERSION ERROR)'), TO_BINARY_FLOAT($2 DEFAULT $3 ON CONVERSION ERROR));
EXECUTE default_param_text2(11, 3.14, 6.666666);
EXECUTE default_param_text2(12, 3.14, NULL);
EXECUTE default_param_text2(13, NULL, 3.14);
EXECUTE default_param_text2(14, 1.79769313486231E+100, 3.14);
EXECUTE default_param_text2(15, 3.14, 1.79769313486231E+100);
EXECUTE default_param_text2(16, 1.79769313486231E+400, 3.14);
EXECUTE default_param_text2(17, 3.14, 1.79769313486231E+400);
EXECUTE default_param_text2(18, 1.79769313486231E+400, NULL);
EXECUTE default_param_text2(19, NULL, 1.79769313486231E+400);

PREPARE default_param_text_num(int, text, float8) AS INSERT INTO t2 VALUES ($1, CONCAT('TO_BINARY_FLOAT(', $2, ' DEFAULT ', $3, ' ON CONVERSION ERROR)'), TO_BINARY_FLOAT($2 DEFAULT $3 ON CONVERSION ERROR));
EXECUTE default_param_text2(20, '3.14', 6.666666);
EXECUTE default_param_text2(21, '  +3.14 ', 6.666666);
EXECUTE default_param_text2(22, '1.79769313486231E+100', 6.666666);
EXECUTE default_param_text2(23, '6.666666', 1.79769313486231E+100);
EXECUTE default_param_text2(24, '1.79769313486231E+400', 6.666666);
EXECUTE default_param_text2(25, '6.666666', 1.79769313486231E+400);

PREPARE default_param_num_text(int, float8, text) AS INSERT INTO tbf2 VALUES ($1, CONCAT('TO_BINARY_FLOAT(', $2, ' DEFAULT ', $3, ' ON CONVERSION ERROR)'), TO_BINARY_FLOAT($2 DEFAULT $3 ON CONVERSION ERROR));
EXECUTE default_param_text2(26, 1.79769313486231E+100, '6.666666');
EXECUTE default_param_text2(27, 6.666666, '1.79769313486231E+100');
EXECUTE default_param_text2(28, 1.79769313486231E+400, '6.666666');
EXECUTE default_param_text2(29, 6.666666, '1.79769313486231E+400');

SELECT * FROM tbf2 ORDER BY c1;

DROP TABLE tbf;
DROP TABLE tbf2;
DROP TABLE t_ne;

drop schema if exists func_tbf cascade;
