set client_min_messages = ERROR;
set enable_default_ustore_table = on;
set enable_opfusion = off;
set enable_indexonlyscan = on;
set enable_indexscan = on;
set enable_bitmapscan = off;
set enable_seqscan = off;
drop schema if exists indexscan_optimization cascade;
drop index if exists t_ustore_c2 cascade;
drop index if exists t_ustore_c4 cascade;
drop index if exists t_ustore_c3_c5 cascade;
drop index if exists t_ustore_c3_c4_c5 cascade;
drop table if exists t_ustore cascade;
set client_min_messages = NOTICE;
create schema indexscan_optimization;
set current_schema = indexscan_optimization;
create table t_ustore(
    c1 int primary key,
    c2 int,
    c3 int,
    c4 varchar(20) collate "C",
    c5 bigint
) with (storage_type=USTORE);
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "t_ustore_pkey" for table "t_ustore"
\d+ t_ustore
                      Table "indexscan_optimization.t_ustore"
 Column |         Type          | Modifiers | Storage  | Stats target | Description 
--------+-----------------------+-----------+----------+--------------+-------------
 c1     | integer               | not null  | plain    |              | 
 c2     | integer               |           | plain    |              | 
 c3     | integer               |           | plain    |              | 
 c4     | character varying(20) | collate C | extended |              | 
 c5     | bigint                |           | plain    |              | 
Indexes:
    "t_ustore_pkey" PRIMARY KEY, ubtree (c1) WITH (storage_type=ustore) TABLESPACE pg_default
Has OIDs: no
Options: orientation=row, storage_type=ustore, compression=no

create index t_ustore_c2 on t_ustore(c2);
create index t_ustore_c4 on t_ustore(c4);
create index t_ustore_c3_c5 on t_ustore(c3, c5);
insert into t_ustore values(0, 1, 1, 'abcdefg', 2);
insert into t_ustore values(1, 2, 1, 'abcdefg', 2);
insert into t_ustore values(2, 3, 2, 'hijklmn', 3);
insert into t_ustore values(3, 4, 2, 'ABCDEFG', 3);
insert into t_ustore values(4, 5, 3, 'hijklmn', 4);
insert into t_ustore values(-1, 6, 0, 'opqrst', 2);
insert into t_ustore values(2147483647, 7, 0, 'opq rst', 5);
insert into t_ustore values(-2147483647, 8, 0, 'opq rst', 5);
insert into t_ustore values(5, 9, 0, 'uvwxyz', 9223372036854775807);
insert into t_ustore values(6, 10, 1, 'uvw xyz', -9223372036854775807);
insert into t_ustore values(7, 11, 0, 'abc', 2);
insert into t_ustore values(8, 12, 0);
insert into t_ustore values(9, 13);
insert into t_ustore values(10, 14, NULL, 'hij', 0);
insert into t_ustore values(11, 15, 0, NULL, 0);
insert into t_ustore values(12, 16, 0, 'hij', NULL);
select * from t_ustore order by c1;
     c1      | c2 | c3 |   c4    |          c5          
-------------+----+----+---------+----------------------
 -2147483647 |  8 |  0 | opq rst |                    5
          -1 |  6 |  0 | opqrst  |                    2
           0 |  1 |  1 | abcdefg |                    2
           1 |  2 |  1 | abcdefg |                    2
           2 |  3 |  2 | hijklmn |                    3
           3 |  4 |  2 | ABCDEFG |                    3
           4 |  5 |  3 | hijklmn |                    4
           5 |  9 |  0 | uvwxyz  |  9223372036854775807
           6 | 10 |  1 | uvw xyz | -9223372036854775807
           7 | 11 |  0 | abc     |                    2
           8 | 12 |  0 |         |                     
           9 | 13 |    |         |                     
          10 | 14 |    | hij     |                    0
          11 | 15 |  0 |         |                    0
          12 | 16 |  0 | hij     |                     
  2147483647 |  7 |  0 | opq rst |                    5
(16 rows)

explain(costs off) select count(*) from t_ustore;
                       QUERY PLAN                       
--------------------------------------------------------
 Aggregate
   ->  Index Only Scan using t_ustore_c3_c5 on t_ustore
(2 rows)

select count(*) from t_ustore;
 count 
-------
    16
(1 row)

explain(costs off) select max(c1) from t_ustore;
                               QUERY PLAN                               
------------------------------------------------------------------------
 Result
   InitPlan 1 (returns $0)
     ->  Limit
           ->  Index Only Scan Backward using t_ustore_pkey on t_ustore
(4 rows)

select max(c1) from t_ustore;
    max     
------------
 2147483647
(1 row)

explain(costs off) select * from t_ustore where c1 < 3 order by c1;
                 QUERY PLAN                 
--------------------------------------------
 Index Scan using t_ustore_pkey on t_ustore
   Index Cond: (c1 < 3)
(2 rows)

select * from t_ustore where c1 < 3 order by c1;
     c1      | c2 | c3 |   c4    | c5 
-------------+----+----+---------+----
 -2147483647 |  8 |  0 | opq rst |  5
          -1 |  6 |  0 | opqrst  |  2
           0 |  1 |  1 | abcdefg |  2
           1 |  2 |  1 | abcdefg |  2
           2 |  3 |  2 | hijklmn |  3
(5 rows)

explain(costs off) select * from t_ustore where c2 = 2;
                QUERY PLAN                
------------------------------------------
 Index Scan using t_ustore_c2 on t_ustore
   Index Cond: (c2 = 2)
(2 rows)

select * from t_ustore where c2 = 2;
 c1 | c2 | c3 |   c4    | c5 
----+----+----+---------+----
  1 |  2 |  1 | abcdefg |  2
(1 row)

explain(costs off) select * from t_ustore where c4 = 'abcdefg' order by (c4, c1);
                     QUERY PLAN                     
----------------------------------------------------
 Sort
   Sort Key: (ROW(c4, c1))
   ->  Index Scan using t_ustore_c4 on t_ustore
         Index Cond: ((c4)::text = 'abcdefg'::text)
(4 rows)

select * from t_ustore where c4 = 'abcdefg' order by (c4, c1);
 c1 | c2 | c3 |   c4    | c5 
----+----+----+---------+----
  0 |  1 |  1 | abcdefg |  2
  1 |  2 |  1 | abcdefg |  2
(2 rows)

explain(costs off) select * from t_ustore where c3 > 0 and c5 < 5 order by c1;
                    QUERY PLAN                     
---------------------------------------------------
 Sort
   Sort Key: c1
   ->  Index Scan using t_ustore_c3_c5 on t_ustore
         Index Cond: ((c3 > 0) AND (c5 < 5))
(4 rows)

select * from t_ustore where c3 > 0 and c5 < 5 order by c1;
 c1 | c2 | c3 |   c4    |          c5          
----+----+----+---------+----------------------
  0 |  1 |  1 | abcdefg |                    2
  1 |  2 |  1 | abcdefg |                    2
  2 |  3 |  2 | hijklmn |                    3
  3 |  4 |  2 | ABCDEFG |                    3
  4 |  5 |  3 | hijklmn |                    4
  6 | 10 |  1 | uvw xyz | -9223372036854775807
(6 rows)

explain(costs off) select /*+ indexonlyscan(t_ustore)*/ c3,c5 from t_ustore where c3 > 0 and c5 < 5 order by (c3, c5);
                       QUERY PLAN                       
--------------------------------------------------------
 Sort
   Sort Key: (ROW(c3, c5))
   ->  Index Only Scan using t_ustore_c3_c5 on t_ustore
         Index Cond: ((c3 > 0) AND (c5 < 5))
(4 rows)

select /*+ indexonlyscan(t_ustore)*/ c3,c5 from t_ustore where c3 > 0 and c5 < 5 order by (c3, c5);
 c3 |          c5          
----+----------------------
  1 | -9223372036854775807
  1 |                    2
  1 |                    2
  2 |                    3
  2 |                    3
  3 |                    4
(6 rows)

explain(costs off) select * from t_ustore where c1 between -1 and 5 and c2 between 3 and 8 order by c1;
                 QUERY PLAN                 
--------------------------------------------
 Index Scan using t_ustore_pkey on t_ustore
   Index Cond: ((c1 >= (-1)) AND (c1 <= 5))
   Filter: ((c2 >= 3) AND (c2 <= 8))
(3 rows)

select * from t_ustore where c1 between -1 and 5 and c2 between 3 and 8 order by c1;
 c1 | c2 | c3 |   c4    | c5 
----+----+----+---------+----
 -1 |  6 |  0 | opqrst  |  2
  2 |  3 |  2 | hijklmn |  3
  3 |  4 |  2 | ABCDEFG |  3
  4 |  5 |  3 | hijklmn |  4
(4 rows)

drop index t_ustore_c2 cascade;
drop index t_ustore_c4 cascade;
drop index t_ustore_c3_c5 cascade;
create unique index t_ustore_c3_c4_c5 on t_ustore(c3, c4, c5);
ERROR:  could not create unique index "t_ustore_c3_c4_c5"
DETAIL:  Key (c3, c4, c5)=(1, abcdefg, 2) is duplicated.
explain(costs off) select * from t_ustore where c3 > 0 and c4 < 'hijlmn' and c5 < 5 order by c1;
                             QUERY PLAN                              
---------------------------------------------------------------------
 Index Scan using t_ustore_pkey on t_ustore
   Filter: ((c3 > 0) AND ((c4)::text < 'hijlmn'::text) AND (c5 < 5))
(2 rows)

select * from t_ustore where c3 > 0 and c4 < 'hijlmn' and c5 < 5 order by c1;
 c1 | c2 | c3 |   c4    | c5 
----+----+----+---------+----
  0 |  1 |  1 | abcdefg |  2
  1 |  2 |  1 | abcdefg |  2
  2 |  3 |  2 | hijklmn |  3
  3 |  4 |  2 | ABCDEFG |  3
  4 |  5 |  3 | hijklmn |  4
(5 rows)

explain(costs off) select /*+ indexonlyscan(t_ustore)*/ c3, c4, c5 from t_ustore where c3 > 0 and c4 < 'hijklmn' and c5 < 5 order by (c3, c4, c5);
WARNING:  unused hint: IndexOnlyScan(t_ustore)
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Sort
   Sort Key: (ROW(c3, c4, c5))
   ->  Seq Scan on t_ustore
         Filter: ((c3 > 0) AND ((c4)::text < 'hijklmn'::text) AND (c5 < 5))
(4 rows)

select /*+ indexonlyscan(t_ustore)*/ c3, c4, c5 from t_ustore where c3 > 0 and c4 < 'hijklmn' and c5 < 5 order by (c3, c4, c5);
 c3 |   c4    | c5 
----+---------+----
  1 | abcdefg |  2
  1 | abcdefg |  2
  2 | ABCDEFG |  3
(3 rows)

drop index t_ustore_c3_c4_c5;
ERROR:  index "t_ustore_c3_c4_c5" does not exist
-- bitmap index scan
set enable_bitmapscan = on;
set enable_indexscan = off;
set enable_indexonlyscan = off;
explain(costs off) select * from t_ustore where c1 between -1 and 3 order by c1;
                       QUERY PLAN                       
--------------------------------------------------------
 Sort
   Sort Key: c1
   ->  Bitmap Heap Scan on t_ustore
         Recheck Cond: ((c1 >= (-1)) AND (c1 <= 3))
         ->  Bitmap Index Scan on t_ustore_pkey
               Index Cond: ((c1 >= (-1)) AND (c1 <= 3))
(6 rows)

select * from t_ustore where c1 between -1 and 3 order by c1;
 c1 | c2 | c3 |   c4    | c5 
----+----+----+---------+----
 -1 |  6 |  0 | opqrst  |  2
  0 |  1 |  1 | abcdefg |  2
  1 |  2 |  1 | abcdefg |  2
  2 |  3 |  2 | hijklmn |  3
  3 |  4 |  2 | ABCDEFG |  3
(5 rows)

-- clear
drop table t_ustore cascade;
reset current_schema;
drop schema indexscan_optimization cascade;
reset enable_default_ustore_table;
reset enable_opfusion;
reset enable_indexonlyscan;
reset enable_indexscan;
reset enable_bitmapscan;
reset enable_seqscan;
reset client_min_messages;
