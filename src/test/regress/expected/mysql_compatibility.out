-- B db compatibility case
drop database if exists B_db;
NOTICE:  database "b_db" does not exist, skipping
create database B_db dbcompatibility 'B';
--------------------concat--------------------
-- concat case in A db compatibility
\c regression
select concat('','A');
 concat 
--------
 A
(1 row)

select concat(null,'A');
 concat 
--------
 A
(1 row)

select concat_ws(',', 'A', null);
 concat_ws 
-----------
 A
(1 row)

select concat_ws(',', 'A', '');
 concat_ws 
-----------
 A
(1 row)

create table text1 (a char(10));
insert into text1 values (concat('A',''));
insert into text1 values (concat('A',null));
select * from text1 where a is null;
 a 
---
(0 rows)

drop table text1;
-- concat case in B db compatibility
\c B_db
select concat('','A');
 concat 
--------
 A
(1 row)

select concat(null,'A');
 concat 
--------
 
(1 row)

select concat_ws(',', 'A', null);
 concat_ws 
-----------
 A
(1 row)

select concat_ws(',', 'A', '');
 concat_ws 
-----------
 A,
(1 row)

create table text1 (a char(10));
insert into text1 values (concat('A',''));
insert into text1 values (concat('A',null));
select * from text1 where a is null;
 a 
---
 
(1 row)

drop table text1;
-----------null is not equal to ''---------
-- null case in postgresql
\c regression
create table text2 (a char(10));
insert into text2 values('');
insert into text2 values (null);
select * from text2 where a is null;
 a 
---
 
 
(2 rows)

select * from text2 where a='';
 a 
---
(0 rows)

select * from text2 where a is not null;
 a 
---
(0 rows)

drop table text2;
-- null case in B db
\c B_db
create table text2 (a char(10));
insert into text2 values('');
insert into text2 values (null);
select * from text2 where a is null;
 a 
---
 
(1 row)

select * from text2 where a='';
     a      
------------
           
(1 row)

select * from text2 where a is not null;
     a      
------------
           
(1 row)

drop table text2;
-- test int8 int1in int2in int4in
\c regression
select '-'::int8;
ERROR:  invalid input syntax for type bigint: "-"
LINE 1: select '-'::int8;
               ^
CONTEXT:  referenced column: int8
select int1in('');
 int1in 
--------
 
(1 row)

select int1in('.1');
ERROR:  invalid input syntax for integer: ".1"
CONTEXT:  referenced column: int1in
select int2in('s');
ERROR:  invalid input syntax for integer: "s"
CONTEXT:  referenced column: int2in
select int4in('s');
ERROR:  invalid input syntax for integer: "s"
CONTEXT:  referenced column: int4in
\c B_db
select '-'::int8;
 int8 
------
    0
(1 row)

select int1in('');
 int1in 
--------
 0
(1 row)

select int1in('.1');
 int1in 
--------
 0
(1 row)

select int2in('s');
 int2in 
--------
      0
(1 row)

select int4in('s');
 int4in 
--------
      0
(1 row)

-- test substr
select substr(9, 2) + 1;
 ?column? 
----------
        1
(1 row)

select substr(9, 2) + 1.2;
 ?column? 
----------
      1.2
(1 row)

select substr(9, 2) + '1';
 ?column? 
----------
        1
(1 row)

select substr(9, 2) + '1.2';
 ?column? 
----------
      1.2
(1 row)

select substr(9, 2) + 'a';
 ?column? 
----------
        0
(1 row)

select substr(1.2, 1, 3) + '1.2';
 ?column? 
----------
      2.4
(1 row)

select 'a' + 1;
 ?column? 
----------
        1
(1 row)

select 'a' + 1.2;
 ?column? 
----------
      1.2
(1 row)

select 'a' + '1';
 ?column? 
----------
        1
(1 row)

select 'a' + '1.2';
 ?column? 
----------
      1.2
(1 row)

select 'a' + 'b';
 ?column? 
----------
        0
(1 row)

select cast('.1' as int);
 int4 
------
    0
(1 row)

select cast('' as int);
 int4 
------
    0
(1 row)

select cast('1.1' as int);
 int4 
------
    1
(1 row)

select cast('s' as int);
 int4 
------
    0
(1 row)

--------------- limit #,#-------------------
-- limit case in postgresql
\c regression
create table test_limit_table(a int);
insert into test_limit_table values (1),(2),(3),(4),(5);
select * from test_limit_table order by 1 limit 2,3;
 a 
---
 3
 4
 5
(3 rows)

select * from test_limit_table order by 1 limit 2,6;
 a 
---
 3
 4
 5
(3 rows)

select * from test_limit_table order by 1 limit 6,2;
 a 
---
(0 rows)

drop table test_limit_table;
-- limit case in B db
\c B_db
create table test_limit_table(a int);
insert into test_limit_table values (1),(2),(3),(4),(5);
select * from test_limit_table order by 1 limit 2,3;
 a 
---
 3
 4
 5
(3 rows)

select * from test_limit_table order by 1 limit 2,6;
 a 
---
 3
 4
 5
(3 rows)

select * from test_limit_table order by 1 limit 6,2;
 a 
---
(0 rows)

drop table test_limit_table;
--------------timestampdiff-----------------
-- timestamp with time zone
-- timestamp1 > timestamp2
\c B_db
select timestampdiff(year, '2018-01-01 01:01:01.000001', '2019-02-02 02:02:02.000002');
 timestamp_diff 
----------------
              1
(1 row)

select timestampdiff(quarter, '2018-01-01 01:01:01.000001', '2019-02-02 02:02:02.000002');
 timestamp_diff 
----------------
              4
(1 row)

select timestampdiff(week, '2018-01-01 01:01:01.000001', '2019-02-02 02:02:02.000002');
 timestamp_diff 
----------------
             56
(1 row)

select timestampdiff(month, '2018-01-01 01:01:01.000001', '2019-02-02 02:02:02.000002');
 timestamp_diff 
----------------
             13
(1 row)

select timestampdiff(day, '2018-01-01 01:01:01.000001', '2019-02-02 02:02:02.000002');
 timestamp_diff 
----------------
            397
(1 row)

select timestampdiff(hour, '2018-01-01 01:01:01.000001', '2019-02-02 02:02:02.000002');
 timestamp_diff 
----------------
           9529
(1 row)

select timestampdiff(minute, '2018-01-01 01:01:01.000001', '2019-02-02 02:02:02.000002');
 timestamp_diff 
----------------
         571741
(1 row)

select timestampdiff(second, '2018-01-01 01:01:01.000001', '2019-02-02 02:02:02.000002');
 timestamp_diff 
----------------
       34304461
(1 row)

select timestampdiff(microsecond, '2018-01-01 01:01:01.000001', '2019-02-02 02:02:02.000002');
 timestamp_diff 
----------------
 34304461000001
(1 row)

-- timestamp2 > timestamp1
select timestampdiff(year, '2019-02-02 02:02:02.000002', '2018-01-01 01:01:01.000001');
 timestamp_diff 
----------------
             -1
(1 row)

select timestampdiff(quarter, '2019-02-02 02:02:02.000002', '2018-01-01 01:01:01.000001');
 timestamp_diff 
----------------
             -4
(1 row)

select timestampdiff(week, '2019-02-02 02:02:02.000002', '2018-01-01 01:01:01.000001');
 timestamp_diff 
----------------
            -56
(1 row)

select timestampdiff(month, '2019-02-02 02:02:02.000002', '2018-01-01 01:01:01.000001');
 timestamp_diff 
----------------
            -13
(1 row)

select timestampdiff(day, '2019-02-02 02:02:02.000002', '2018-01-01 01:01:01.000001');
 timestamp_diff 
----------------
           -397
(1 row)

select timestampdiff(hour, '2019-02-02 02:02:02.000002', '2018-01-01 01:01:01.000001');
 timestamp_diff 
----------------
          -9529
(1 row)

select timestampdiff(minute, '2019-02-02 02:02:02.000002', '2018-01-01 01:01:01.000001');
 timestamp_diff 
----------------
        -571741
(1 row)

select timestampdiff(second, '2019-02-02 02:02:02.000002', '2018-01-01 01:01:01.000001');
 timestamp_diff 
----------------
      -34304461
(1 row)

select timestampdiff(microsecond, '2019-02-02 02:02:02.000002', '2018-01-01 01:01:01.000001');
 timestamp_diff  
-----------------
 -34304461000001
(1 row)

-- LEAP YEAR LEAP MONTH
select timestampdiff(day, '2016-01-01', '2017-01-01');
 timestamp_diff 
----------------
            366
(1 row)

select timestampdiff(day, '2017-01-01', '2018-01-01');
 timestamp_diff 
----------------
            365
(1 row)

select timestampdiff(day, '2016-01-01', '2016-02-01');
 timestamp_diff 
----------------
             31
(1 row)

select timestampdiff(day, '2016-02-01', '2016-03-01');
 timestamp_diff 
----------------
             29
(1 row)

select timestampdiff(day, '2016-03-01', '2016-04-01');
 timestamp_diff 
----------------
             31
(1 row)

select timestampdiff(day, '2016-04-01', '2016-05-01');
 timestamp_diff 
----------------
             30
(1 row)

select timestampdiff(day, '2016-05-01', '2016-06-01');
 timestamp_diff 
----------------
             31
(1 row)

select timestampdiff(day, '2016-06-01', '2016-07-01');
 timestamp_diff 
----------------
             30
(1 row)

select timestampdiff(day, '2016-07-01', '2016-08-01');
 timestamp_diff 
----------------
             31
(1 row)

select timestampdiff(day, '2016-08-01', '2016-09-01');
 timestamp_diff 
----------------
             31
(1 row)

select timestampdiff(day, '2016-09-01', '2016-10-01');
 timestamp_diff 
----------------
             30
(1 row)

select timestampdiff(day, '2016-10-01', '2016-11-01');
 timestamp_diff 
----------------
             31
(1 row)

select timestampdiff(day, '2016-11-01', '2016-12-01');
 timestamp_diff 
----------------
             30
(1 row)

select timestampdiff(day, '2016-12-01', '2017-01-01');
 timestamp_diff 
----------------
             31
(1 row)

select timestampdiff(day, '2000-02-01', '2000-03-01');
 timestamp_diff 
----------------
             29
(1 row)

select timestampdiff(day, '1900-02-01', '1900-03-01');
 timestamp_diff 
----------------
             28
(1 row)

-- timestamp without time zone
select timestampdiff(year, '2018-01-01 01:01:01.000001'::timestamp, '2019-02-02 02:02:02.000002'::timestamp);
 timestamp_diff 
----------------
              1
(1 row)

select timestampdiff(quarter, '2018-01-01 01:01:01.000001'::timestamp, '2019-02-02 02:02:02.000002'::timestamp);
 timestamp_diff 
----------------
              4
(1 row)

select timestampdiff(week, '2018-01-01 01:01:01.000001'::timestamp, '2019-02-02 02:02:02.000002'::timestamp);
 timestamp_diff 
----------------
             56
(1 row)

select timestampdiff(month, '2018-01-01 01:01:01.000001'::timestamp, '2019-02-02 02:02:02.000002'::timestamp);
 timestamp_diff 
----------------
             13
(1 row)

select timestampdiff(day, '2018-01-01 01:01:01.000001'::timestamp, '2019-02-02 02:02:02.000002'::timestamp);
 timestamp_diff 
----------------
            397
(1 row)

select timestampdiff(hour, '2018-01-01 01:01:01.000001'::timestamp, '2019-02-02 02:02:02.000002'::timestamp);
 timestamp_diff 
----------------
           9529
(1 row)

select timestampdiff(minute, '2018-01-01 01:01:01.000001'::timestamp, '2019-02-02 02:02:02.000002'::timestamp);
 timestamp_diff 
----------------
         571741
(1 row)

select timestampdiff(second, '2018-01-01 01:01:01.000001'::timestamp, '2019-02-02 02:02:02.000002'::timestamp);
 timestamp_diff 
----------------
       34304461
(1 row)

select timestampdiff(microsecond, '2018-01-01 01:01:01.000001'::timestamp, '2019-02-02 02:02:02.000002'::timestamp);
 timestamp_diff 
----------------
 34304461000001
(1 row)

-- now()
select timestampdiff(year, '2018-01-01', now());
 timestamp_diff 
----------------
--?.*
(1 row)

select timestampdiff(quarter, '2018-01-01', now());
 timestamp_diff 
----------------
--?.*
(1 row)

select timestampdiff(week, '2018-01-01', now());
 timestamp_diff 
----------------
--?.*
(1 row)

select timestampdiff(month, '2018-01-01', now());
 timestamp_diff 
----------------
--?.*
(1 row)

select timestampdiff(day, '2018-01-01', now());
 timestamp_diff 
----------------
--?.*
(1 row)

select timestampdiff(hour, '2018-01-01', now());
 timestamp_diff 
----------------
--?.*
(1 row)

select timestampdiff(minute, '2018-01-01', now());
 timestamp_diff 
----------------
--?.*
(1 row)

select timestampdiff(second, '2018-01-01', now());
 timestamp_diff 
----------------
--?.*
(1 row)

select timestampdiff(microsecond, '2018-01-01', now());
--?.*
--?.*
--?.*
(1 row)

-- current_timestamp
select timestampdiff(year,'2018-01-01', current_timestamp);
 timestamp_diff 
----------------
--?.*
(1 row)

-- test error
select timestampdiff(yearss, '2018-01-01', now());
ERROR:  timestamp with time zone units "yearss" not recognized
CONTEXT:  referenced column: timestamp_diff
select timestampdiff(century, '2018-01-01', now());
ERROR:  timestamp units "century" not supported
CONTEXT:  referenced column: timestamp_diff
select timestampdiff(year, '-0001-01-01', '2019-01-01');
ERROR:  invalid input syntax for type timestamp with time zone: "-0001-01-01"
LINE 1: select timestampdiff(year, '-0001-01-01', '2019-01-01');
                                   ^
CONTEXT:  referenced column: timestamp_diff
select timestampdiff(microsecond, '0001-01-01', '293000-12-31');
ERROR:  The result of timestampdiff out of range.
CONTEXT:  referenced column: timestamp_diff
select timestampdiff(microsecond, '2018-13-01', '2019-12-31');
ERROR:  date/time field value out of range: "2018-13-01"
LINE 1: select timestampdiff(microsecond, '2018-13-01', '2019-12-31'...
                                          ^
HINT:  Perhaps you need a different "datestyle" setting.
CONTEXT:  referenced column: timestamp_diff
select timestampdiff(microsecond, '2018-01-01', '2019-12-32');
ERROR:  date/time field value out of range: "2019-12-32"
LINE 1: select timestampdiff(microsecond, '2018-01-01', '2019-12-32'...
                                                        ^
HINT:  Perhaps you need a different "datestyle" setting.
CONTEXT:  referenced column: timestamp_diff
-- test table ref
create table timestamp(a timestamp, b timestamp with time zone);
insert into timestamp values('2018-01-01 01:01:01.000001', '2019-02-02 02:02:02.000002');
select timestampdiff(year, '2018-01-01 01:01:01.000001', b) from timestamp;
 timestamp_diff 
----------------
              1
(1 row)

select timestampdiff(quarter, '2018-01-01 01:01:01.000001', b) from timestamp;
 timestamp_diff 
----------------
              4
(1 row)

select timestampdiff(week, '2018-01-01 01:01:01.000001', b) from timestamp;;
 timestamp_diff 
----------------
             56
(1 row)

select timestampdiff(month, '2018-01-01 01:01:01.000001', b) from timestamp;;
 timestamp_diff 
----------------
             13
(1 row)

select timestampdiff(day, '2018-01-01 01:01:01.000001', b) from timestamp;;
 timestamp_diff 
----------------
            397
(1 row)

select timestampdiff(hour, '2018-01-01 01:01:01.000001', b) from timestamp;;
 timestamp_diff 
----------------
           9529
(1 row)

select timestampdiff(minute, '2018-01-01 01:01:01.000001',b) from timestamp;;
 timestamp_diff 
----------------
         571741
(1 row)

select timestampdiff(second, '2018-01-01 01:01:01.000001', b) from timestamp;
 timestamp_diff 
----------------
       34304461
(1 row)

select timestampdiff(microsecond, '2018-01-01 01:01:01.000001', b) from timestamp;
 timestamp_diff 
----------------
 34304461000001
(1 row)

drop table timestamp;
--test uservar
show enable_set_variable_b_format;
 enable_set_variable_b_format 
------------------------------
 off
(1 row)

set enable_set_variable_b_format = on;
set @var_t_1 = 10;
select @var_t_1;
 @var_t_1 
----------
       10
(1 row)

select @var_t_1 := @var_t_1 + 2;
 ?column? 
----------
       12
(1 row)

select @var_t_1 = 2 = 2;
 ?column? 
----------
 f
(1 row)

select @var_t_1;
 @var_t_1 
----------
       12
(1 row)

create table test_var (col1 text, col2 text);
insert into test_var values('abc','def');
insert into test_var values('abc2','def3');
select * from test_var;
 col1 | col2 
------+------
 abc  | def
 abc2 | def3
(2 rows)

select @var_row := @var_row + 1 as row , t.* from (select @var_row := 0) r, test_var t;
 row | col1 | col2 
-----+------+------
   1 | abc  | def
   2 | abc2 | def3
(2 rows)

-- test var_name
set @v1 := 1;
set @1a_b.2$3 := 2;
set @a_b.2$3 := 3;
set @_ab.2$3 := 4;
set @.ab_2$3 := 5;
set @$ab.2_3 := 6;
select @v1, @1a_b.2$3, @a_b.2$3, @_ab.2$3, @.ab_2$3, @$ab.2_3;
 @v1 | @1a_b.2$3 | @a_b.2$3 | @_ab.2$3 | @.ab_2$3 | @$ab.2_3 
-----+-----------+----------+----------+----------+----------
   1 |         2 |        3 |        4 |        5 |        6
(1 row)

drop table if exists test1;
NOTICE:  table "test1" does not exist, skipping
create table test1 (f1 int,f2 int,f3 text);
-- prepare with empty var or not exist var
set @v_empty := '';
prepare stmt_empty as @v_empty;
ERROR:  Query was empty
prepare stmt_empty as @does_not_exist;
ERROR:  Query was empty
-- insertStmt
set @v2 := 'insert into test1 values(1, 2, 123)';
prepare stmt2 as @v2;
execute stmt2;
select * from test1;
 f1 | f2 | f3  
----+----+-----
  1 |  2 | 123
(1 row)

-- updateStmt
set @vx := 2, @vy := 'world';
set @v3 := 'update test1 set f3 = left(@vy, (@vx) :: int)';
prepare stmt3 as @v3;
execute stmt3;
select * from test1;
 f1 | f2 | f3 
----+----+----
  1 |  2 | wo
(1 row)

-- deleteStmt
set @v4 := 'delete from test1 where f1 = 1';
prepare stmt4 as @v4;
execute stmt4;
select * from test1;
 f1 | f2 | f3 
----+----+----
(0 rows)

--plpgsql
create table t_plg(a int);
insert into t_plg values(1),(2),(3);
set @plg = 1;
DO $$
begin
perform @plg := @plg + 1 from t_plg;
end;
$$;
-- bugfix for in plpgsql
prepare stmtabv as select 123;
CREATE OR REPLACE PROCEDURE pppabc (id text) as 
begin
 set @abcttt = concat('select ' , id );
 DEALLOCATE prepare stmtabv;
 prepare stmtabv as @abcttt;
end;
/
execute stmtabv;
 ?column? 
----------
      123
(1 row)

call pppabc(12334);
 pppabc 
--------
 
(1 row)

execute stmtabv;
 ?column? 
----------
    12334
(1 row)

call pppabc(123345);
 pppabc 
--------
 
(1 row)

execute stmtabv;
 ?column? 
----------
   123345
(1 row)

--test in where 
CREATE TABLE employee (
   id int ,
   salary int not null
);
INSERT INTO employee VALUES(1, 100);
INSERT INTO employee VALUES(2, 200);
INSERT INTO employee VALUES(3, 300);
SELECT salary, (@rowno := @rowno + 1) AS rowno FROM employee, (SELECT @rowno := 0) r;
 salary | rowno 
--------+-------
    100 |     1
    200 |     2
    300 |     3
(3 rows)

SELECT salary, rowno
FROM (
    SELECT salary, (@rowno := @rowno + 1) AS rowno
    FROM employee, (SELECT @rowno := 0) r
) m
WHERE rowno = 2;
 salary | rowno 
--------+-------
    200 |     2
(1 row)

--test in error
SELECT salary, (@rowno := salary) AS rowno FROM employee ;
 salary | rowno 
--------+-------
    100 |   100
    200 |   200
    300 |   300
(3 rows)

SELECT salary, (@rowno := salary + 1) AS rowno FROM employee ;
 salary | rowno 
--------+-------
    100 |   101
    200 |   201
    300 |   301
(3 rows)

--test in order by 
set @rowno = 0;
SELECT salary, (@rowno := @rowno + 1) AS rowno FROM employee order by  @rowno;
 salary | rowno 
--------+-------
    100 |     1
    200 |     2
    300 |     3
(3 rows)

set @rowno = 0;
SELECT salary, (@rowno := @rowno + 1) AS rowno FROM employee order by  @rowno desc;
 salary | rowno 
--------+-------
    100 |     1
    200 |     2
    300 |     3
(3 rows)

set @rowno = 0;
SELECT salary, @rowno AS rowno FROM employee order by  (@rowno := @rowno + 1) desc;
 salary | rowno 
--------+-------
    300 |     2
    200 |     1
    100 |     0
(3 rows)

--test in update
set @rowno = 0;
update employee set salary = 999 where (@rowno := @rowno + 1) < 2;
select @rowno;
 @rowno 
--------
      3
(1 row)

select * from employee;
 id | salary 
----+--------
  2 |    200
  3 |    300
  1 |    999
(3 rows)

--test in delete
set @rowno = 0;
delete from employee where (@rowno := @rowno + 1) < 2;
select @rowno;
 @rowno 
--------
      3
(1 row)

select * from employee;
 id | salary 
----+--------
  3 |    300
  1 |    999
(2 rows)

--test in const
set @rowno = 0;
SELECT (@rowno := sin(1));
     ?column?     
------------------
 .841470984807897
(1 row)

select @rowno;
      @rowno      
------------------
 .841470984807897
(1 row)

set @rowno = 0;
SELECT (@rowno := 1+2+3+4);
 ?column? 
----------
       10
(1 row)

select @rowno;
 @rowno 
--------
     10
(1 row)

create table test_con (a int);
insert into test_con values(1);
set @rowno = 0;
select (@rowno := (select a+10086 from test_con limit 1));
 ?column? 
----------
    10087
(1 row)

select @rowno;
 @rowno 
--------
  10087
(1 row)

-- test insert select 
create table t1 (a int);
insert into t1 values(1),(10);
set @num := 0;
create table t2(b int);
insert into t2 select @num + 10 from t1;
select * from t2;
 b  
----
 10
 10
(2 rows)

select @num;
 @num 
------
    0
(1 row)

-- test insert right ref
drop table if exists ins_sel_t0;
NOTICE:  table "ins_sel_t0" does not exist, skipping
CREATE TABLE ins_sel_t0 ( c3 INT , c10 INT ) ;
INSERT INTO ins_sel_t0 VALUES ( -66 , 54 ) ,
    ( EXISTS ( SELECT 76 AS c42 WHERE c3 = 12 IS NOT FALSE ) NOT IN ( 75 >= -80 ) , -99 ) ; -- should error
ERROR:  column "c3" does not exist
LINE 2:     ( EXISTS ( SELECT 76 AS c42 WHERE c3 = 12 IS NOT FALSE )...
                                              ^
HINT:  There is a column named "c3" in table "ins_sel_t0", but it cannot be referenced from this part of the query.
drop table ins_sel_t0;
--test as function parameter
set @num := 1;
select sin(@num := @num + 1) from t1;
       sin        
------------------
 .909297426825682
 .141120008059867
(2 rows)

-- procedure
set enable_set_variable_b_format = on;
set @v1 := 10, @v2 := 'abc';
drop table if exists test_pro;
NOTICE:  table "test_pro" does not exist, skipping
create table test_pro(f1 int, f2 varchar(20));
create or replace procedure pro_insert()
as
begin
    perform @v1 := @v1 +1;
    insert into test_pro values(@v1, @v2);
end;
/
call pro_insert();
 pro_insert 
------------
 
(1 row)

select * from test_pro;
 f1 | f2  
----+-----
 11 | abc
(1 row)

select @v1;
 @v1 
-----
  11
(1 row)

set @v1 := 14, @v2 := 'xxx';
call pro_insert();
 pro_insert 
------------
 
(1 row)

select * from test_pro;
 f1 | f2  
----+-----
 11 | abc
 15 | xxx
(2 rows)

select @v1;
 @v1 
-----
  15
(1 row)

set enable_set_variable_b_format = on;
set @v1 = 1;
set @v1 = 1;
create or replace function func_add_sql(num1 bigint, num2 bigint) return bigint
as
begin
    return @v1 := 2 + @v1 ;
end;
/
call func_add_sql(-2, -5);
 func_add_sql 
--------------
            3
(1 row)

select @v1;
 @v1 
-----
   3
(1 row)

set @a = 0;
create table test_set(c1 int);
insert into test_set values(1),(2),(3),(4);
select c1 from test_set where (c1 > @a := 1000) or (c1 < @a := 2 + @a);
 c1 
----
  1
  2
  3
  4
(4 rows)

select @a;
  @a  
------
 1002
(1 row)

explain (costs off) select c1 from test_set where (c1 > @a := 1000) or (c1 < @a := 2 + @a);
                         QUERY PLAN                         
------------------------------------------------------------
 Seq Scan on test_set
   Filter: ((c1 > @var := 1000) OR (c1 < @var := (2 + @a)))
(2 rows)

--test trig
drop table if exists test_trigger_des_tbl;
NOTICE:  table "test_trigger_des_tbl" does not exist, skipping
drop table if exists test_trigger_src_tbl;
NOTICE:  table "test_trigger_src_tbl" does not exist, skipping
CREATE TABLE test_trigger_src_tbl(id1 INT, id2 INT, id3 INT);
CREATE TABLE test_trigger_des_tbl(id1 INT, id2 INT, id3 INT);
set @va = 1;
CREATE OR REPLACE FUNCTION tri_insert_func() RETURNS TRIGGER AS
$$
DECLARE
BEGIN
    perform @va := @va + 100;
    INSERT INTO test_trigger_des_tbl VALUES(NEW.id1, NEW.id2, NEW.id3);
  RETURN NEW;
END
$$ LANGUAGE PLPGSQL;
		   
CREATE TRIGGER insert_trigger
           BEFORE INSERT ON test_trigger_src_tbl
           FOR EACH ROW
           EXECUTE PROCEDURE tri_insert_func();
		   
INSERT INTO test_trigger_src_tbl VALUES(100);
select @va;
 @va 
-----
 101
(1 row)

select * from test_trigger_src_tbl;
 id1 | id2 | id3 
-----+-----+-----
 100 |     |    
(1 row)

select * from test_trigger_des_tbl;
 id1 | id2 | id3 
-----+-----+-----
 100 |     |    
(1 row)

--@var retest 
--select
select @a1:=cast(1 as int2);
 ?column? 
----------
        1
(1 row)

select @a2:=cast(2 as int4);
 ?column? 
----------
        2
(1 row)

select @a3:=cast(3 as int8);
 ?column? 
----------
        3
(1 row)

select @a4:=cast(4 as number);
 ?column? 
----------
        4
(1 row)

select @a5:=cast(5.5 as numeric);
 ?column? 
----------
      5.5
(1 row)

select @a6:=cast(6.76 as number(5));
 ?column? 
----------
        7
(1 row)

select @a7:=cast(0.54 as number(3,3));
 ?column? 
----------
     .540
(1 row)

select @a8:=cast(8.0 as number(4,1));
 ?column? 
----------
      8.0
(1 row)

select @a9:=cast(9.66 as float4);
 ?column? 
----------
     9.66
(1 row)

select @a10:=cast(10.33 as float8);
 ?column? 
----------
    10.33
(1 row)

select @a11:=cast(11.2 as real);
 ?column? 
----------
     11.2
(1 row)

select @a1,@a2,@a3,@a4,@a5,@a6,@a7,@a8,@a9,@a10,@a11;
 @a1 | @a2 | @a3 | @a4 | @a5 | @a6 | @a7 | @a8 | @a9  | @a10  | @a11 
-----+-----+-----+-----+-----+-----+-----+-----+------+-------+------
   1 |   2 |   3 |   4 | 5.5 |   7 | .54 |   8 | 9.66 | 10.33 | 11.2
(1 row)

--select
select @a1:=cast(1 as char);
 ?column? 
----------
 1
(1 row)

select @a2:=cast(2 as varchar);
 ?column? 
----------
 2
(1 row)

select @a3:=cast(3 as clob);
 ?column? 
----------
 3
(1 row)

select @a4:=cast(4 as text);
 ?column? 
----------
 4
(1 row)

select @a5:=cast(5.5 as name);
 ?column? 
----------
 5.5
(1 row)

select @a6:=cast(6.76 as nchar);
 ?column? 
----------
 6
(1 row)

select @a7:=cast(7.54 as char(4));
 ?column? 
----------
 7.54
(1 row)

select @a8:=cast(8.0 as nchar(4));
 ?column? 
----------
 8.0 
(1 row)

select @a9:=cast(9.66 as varchar(4));
 ?column? 
----------
 9.66
(1 row)

select @a10:=cast(10.33 as varchar2(4));
 ?column? 
----------
 10.3
(1 row)

select @a11:=cast(11.2 as nvarchar2(4));
 ?column? 
----------
 11.2
(1 row)

select @a1,@a2,@a3,@a4,@a5,@a6,@a7,@a8,@a9,@a10,@a11;
 @a1 | @a2 | @a3 | @a4 | @a5 | @a6 | @a7  | @a8  | @a9  | @a10 | @a11 
-----+-----+-----+-----+-----+-----+------+------+------+------+------
 1   | 2   | 3   | 4   | 5.5 | 6   | 7.54 | 8.0  | 9.66 | 10.3 | 11.2
(1 row)

--select
select @a1:=cast('2012-12-12' as date);
  ?column?  
------------
 12-12-2012
(1 row)

select @a2:=cast('10:25:32' as time);
 ?column? 
----------
 10:25:32
(1 row)

select @a3:=cast('2023-01-22' as timestamp);
         ?column?         
--------------------------
 Sun Jan 22 00:00:00 2023
(1 row)

select @a4:=cast('2003-04-12 04:05:06' as smalldatetime);
         ?column?         
--------------------------
 Sat Apr 12 04:05:00 2003
(1 row)

select @a5:=cast(INTERVAL '3' year as interval year);
 ?column?  
-----------
 @ 3 years
(1 row)

select @a6:=cast(INTERVAL '3' DAY as interval day to second);
 ?column? 
----------
 @ 3 days
(1 row)

select @a7:=cast('90' as reltime);
 ?column? 
----------
 @ 3 mons
(1 row)

select @a1,@a2,@a3,@a4,@a5,@a6,@a7;
    @a1     |   @a2    |           @a3            |           @a4            |    @a5    |   @a6    |   @a7    
------------+----------+--------------------------+--------------------------+-----------+----------+----------
 12-12-2012 | 10:25:32 | Sun Jan 22 00:00:00 2023 | Sat Apr 12 04:05:00 2003 | @ 3 years | @ 3 days | @ 3 mons
(1 row)

--select
select @a1:='[1,2,3]';
 ?column? 
----------
 [1,2,3]
(1 row)

select @a2:='[1,[2,4,6],3]';
   ?column?    
---------------
 [1,[2,4,6],3]
(1 row)

select @a3:='[1,{"aa":"ss","bb":4},3]';
         ?column?         
--------------------------
 [1,{"aa":"ss","bb":4},3]
(1 row)

select @a4:='{"aa":"ss","bb":4}';
      ?column?      
--------------------
 {"aa":"ss","bb":4}
(1 row)

select @a5:='{"aa":"ss","bb":4,"cc":{"dd":9}}';
             ?column?             
----------------------------------
 {"aa":"ss","bb":4,"cc":{"dd":9}}
(1 row)

select @a6:='{"aa":[2,3,4],"bb":4}';
       ?column?        
-----------------------
 {"aa":[2,3,4],"bb":4}
(1 row)

select @a1,@a2,@a3,@a4,@a5,@a6;
   @a1   |      @a2      |           @a3            |        @a4         |               @a5                |          @a6          
---------+---------------+--------------------------+--------------------+----------------------------------+-----------------------
 [1,2,3] | [1,[2,4,6],3] | [1,{"aa":"ss","bb":4},3] | {"aa":"ss","bb":4} | {"aa":"ss","bb":4,"cc":{"dd":9}} | {"aa":[2,3,4],"bb":4}
(1 row)

--外表
create table tt_1130949(a1 text PRIMARY KEY);
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "tt_1130949_pkey" for table "tt_1130949"
insert into tt_1130949 values('d'),('r'),('i'),('j');
--建表
create table tab_1130949(a1 int not null,a2 char(8) unique,a3 text primary key,a4 date default '2023-02-03',a5 varchar(16) check(a5 is not null),a6 text REFERENCES tt_1130949(a1));
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "tab_1130949_pkey" for table "tab_1130949"
NOTICE:  CREATE TABLE / UNIQUE will create implicit index "tab_1130949_a2_key" for table "tab_1130949"
--index
create index on tab_1130949(a1);
create index on tab_1130949 using btree(a2);
create index on tab_1130949 using gin(to_tsvector('ngram', a4));
--insert
insert into tab_1130949 values(1,'a','b','2012-12-14','c','d');
insert into tab_1130949 values(2,'q','w','2013-12-14','e','r');
insert into tab_1130949 values(3,'t','y','2014-12-14','u','i');
insert into tab_1130949 values(4,'f','g','2015-12-14','h','j');
--select 变量
select @b1:=a1 from tab_1130949;
 ?column? 
----------
        1
        2
        3
        4
(4 rows)

select @b2:=a2 from tab_1130949;
 ?column? 
----------
 a       
 q       
 t       
 f       
(4 rows)

select @b3:=a3 from tab_1130949;
 ?column? 
----------
 b
 w
 y
 g
(4 rows)

select @b4:=a4 from tab_1130949;
  ?column?  
------------
 12-14-2012
 12-14-2013
 12-14-2014
 12-14-2015
(4 rows)

select @b5:=a5 from tab_1130949;
 ?column? 
----------
 c
 e
 u
 h
(4 rows)

select @b6:=a6 from tab_1130949;
 ?column? 
----------
 d
 r
 i
 j
(4 rows)

select @b1,@b2,@b3,@b4,@b5,@b6;
 @b1 |   @b2    | @b3 |    @b4     | @b5 | @b6 
-----+----------+-----+------------+-----+-----
   4 | f        | g   | 12-14-2015 | h   | j
(1 row)

drop table if exists tt_1130949 cascade;
NOTICE:  drop cascades to constraint tab_1130949_a6_fkey on table tab_1130949
drop table if exists tab_1130956 cascade;
NOTICE:  table "tab_1130956" does not exist, skipping
--建表
create table tab_1130965(a1 int,a2 int);
--插入数据
insert into tab_1130965 values(1,1),(2,3),(3,2),(4,1);
--select
--表字段与常量
select (@bq1:=case when tab_1130965.a1<3 then tab_1130965.a1 +3 else tab_1130965.a1 end) from tab_1130965;
 ?column? 
----------
        4
        5
        3
        4
(4 rows)

--表字段与表字段
select (@bq2:=case when tab_1130965.a1<tab_1130965.a2 then tab_1130965.a1 else tab_1130965.a2 end) from tab_1130965;
 ?column? 
----------
        1
        2
        2
        1
(4 rows)

--表字段与变量
set @asd1:=5;
select (@bq3:=case when tab_1130965.a1< @asd1 then tab_1130965.a1 else @asd1 end) from tab_1130965;
 ?column? 
----------
        1
        2
        3
        4
(4 rows)

--变量与变量
set @asd2:=3;
select (@bq4:=case when @asd1> @asd2 then @asd2 else @asd1 end);
 ?column? 
----------
        3
(1 row)

--变量与常量
set @asd2:=2;
select (@bq5:=case when @asd1>3 then @asd2 else @asd1 end);
 ?column? 
----------
        2
(1 row)

select @bq1,@bq2,@bq3,@bq4,@bq5;
 @bq1 | @bq2 | @bq3 | @bq4 | @bq5 
------+------+------+------+------
    4 |    1 |    4 |    3 |    2
(1 row)

--创建函数
create or replace function fun_1131007(b1 in int,b2 in int,b3 out int)return int
as
begin
select @bb:=b1>b2 into b3;
raise notice '%',b3;
return @bb;
end;
/
select fun_1131007(1,2);
NOTICE:  0
CONTEXT:  referenced column: fun_1131007
 fun_1131007 
-------------
           0
(1 row)

--建表
create table tab_1131021(id int,aa char(8));
insert into tab_1131021 values(1,'name');
--select
set @a_1131021:=1;
select @a_1131021:=@a_1131021+id from tab_1131021;
 ?column? 
----------
        2
(1 row)

select @a_1131021:=@a_1131021+aa from tab_1131021;--报错
 ?column? 
----------
        2
(1 row)

drop table if exists tab_1131021 cascade;
--建表
create table tab_1131027(id int,aa char(8));
insert into tab_1131027 values(1,'name'),(2,'ss'),(3,'dd');
--select
select @a_1131027:=min(id) from tab_1131027;
 ?column? 
----------
        1
(1 row)

select @a_1131027:=max(id) from tab_1131027;
 ?column? 
----------
        3
(1 row)

select @a_1131027:=sum(id) from tab_1131027;
 ?column? 
----------
        6
(1 row)

select @a_1131027:=avg(id) from tab_1131027;
      ?column?      
--------------------
 2.0000000000000000
(1 row)

select @a_1131027:=count(id) from tab_1131027;
 ?column? 
----------
        3
(1 row)

drop table if exists tab_1131027 cascade;
--select
select @a_1131028:=cast('x' as char(4));
 ?column? 
----------
 x   
(1 row)

select @a_1131028:=cast('x' as varchar(4));
 ?column? 
----------
 x
(1 row)

select @a_1131028:=cast('x' as nchar(4));
 ?column? 
----------
 x   
(1 row)

select @a_1131028:=cast('x' as varchar2(4));
 ?column? 
----------
 x
(1 row)

select @a_1131028:=cast('x' as text);
 ?column? 
----------
 x
(1 row)

select @a_1131028:=cast(2 as int);
 ?column? 
----------
        2
(1 row)

select @a_1131028:=cast(2 as number);
 ?column? 
----------
        2
(1 row)

DROP PROCEDURE IF EXISTS load_tbtest_WITH_REPLACE;
NOTICE:  function load_tbtest_with_replace() does not exist, skipping
CREATE PROCEDURE load_tbtest_WITH_REPLACE(id_count IN INT) AS
BEGIN
    SET @id = 1;
    WHILE @id <= id_count LOOP
        raise info 'id is %',@id;
        IF @id % 10 = 0 THEN
            SET @lsql = '';
        END IF;
        SET @id = @id + 1;
        raise info 'id+ is %',@id;
    END LOOP;
END;
/
call load_tbtest_WITH_REPLACE(3);
INFO:  id is 1
INFO:  id+ is 2
INFO:  id is 2
INFO:  id+ is 3
INFO:  id is 3
INFO:  id+ is 4
 load_tbtest_with_replace 
--------------------------
 
(1 row)

--bugfix @var := expr in group by 
drop table if exists tt_bug1 ;
NOTICE:  table "tt_bug1" does not exist, skipping
create  table tt_bug1(a int );
insert into tt_bug1 values(1),(11),(111);
SELECT a, @a, a as xx FROM tt_bug1 GROUP BY @a:= 999,a order by a ;
  a  | @a  | xx  
-----+-----+-----
   1 | 999 |   1
  11 | 999 |  11
 111 | 999 | 111
(3 rows)

SELECT a, @a, count(a) as xx FROM tt_bug1 GROUP BY @a:= a+11 ,a order by a ;
  a  | @a  | xx 
-----+-----+----
   1 |  12 |  1
  11 |  22 |  1
 111 | 122 |  1
(3 rows)

SELECT @a, avg(a) as xx FROM tt_bug1 GROUP BY @a:= 11;
 @a |         xx          
----+---------------------
 11 | 41.0000000000000000
(1 row)

set enable_set_variable_b_format = 0;
select @var_t_1 := 2;
ERROR:  syntax error at or near ":="
LINE 1: select @var_t_1 := 2;
                        ^
\c regression
drop database B_db;
