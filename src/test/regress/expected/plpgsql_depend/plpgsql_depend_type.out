drop schema if exists plpgsql_depend_type cascade;
NOTICE:  schema "plpgsql_depend_type" does not exist, skipping
create schema plpgsql_depend_type;
set current_schema = plpgsql_depend_type;
set behavior_compat_options = 'plpgsql_dependency';
-- prepare data table
create or replace function create_data_table returns int as $$
begin
drop table if exists stu;
create table stu (sno int, name varchar, sex varchar, cno int);
insert into stu values(1,'zhang','M',1);
insert into stu values(1,'zhang','M',1);
insert into stu values(2,'wangwei','M',2);
insert into stu values(3,'liu','F',3);
return 1;
end;
$$
LANGUAGE plpgsql;
-- drop data table
create or replace function drop_data_table returns int as $$
begin
drop table if exists stu;
return 1;
end;
$$
LANGUAGE plpgsql;
-- drop data table cascade
create or replace function drop_data_table_cascade returns int as $$
begin
drop table if exists stu cascade;
return 1;
end;
$$
LANGUAGE plpgsql;
-- test 0 pkg_record_undefine_schema_type
drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    type r1 is record(a int, b sr);
    procedure proc1;
end pkg;
/
WARNING:  Type sr does not exist.
LINE 1:  PACKAGE  DECLARE  type r1 is record(a int, b sr);
                                                      ^
QUERY:   PACKAGE  DECLARE  type r1 is record(a int, b sr);
    procedure proc1;
end 
CONTEXT:  compilation of PL/pgSQL package near line 1
WARNING:  Package created with compilation erors.
-- valid is false
select valid from pg_object where object_type='S' and object_oid in (
    select Oid from gs_package where pkgname='pkg' and pkgnamespace = (
        select Oid from pg_namespace where nspname = 'plpgsql_depend_type')
    );
 valid 
-------
 f
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
        b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast
from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (
    a.schemaname='plpgsql_depend_type' and a.packagename='pkg'
) or (
    b.schemaname='plpgsql_depend_type' and b.packagename='pkg'
) order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+-----+----+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | pkg | r1 |      1 | plpgsql_depend_type | null  | sr    |     3 | {DependenciesUndefined}
(1 row)

-- remove dependency, no rows
drop package pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
        b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast
from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (
    a.schemaname='plpgsql_depend_type' and a.packagename='pkg'
) or (
    b.schemaname='plpgsql_depend_type' and b.packagename='pkg'
) order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 1 pkg_record_non_complete_define_schema_type
drop package if exists pkg2;
NOTICE:  package pkg2() does not exist, skipping
create or replace package pkg2
is
    type r2 is record(a int, b sr);
    procedure proc1;
end pkg2;
/
WARNING:  Type sr does not exist.
LINE 1:  PACKAGE  DECLARE  type r2 is record(a int, b sr);
                                                      ^
QUERY:   PACKAGE  DECLARE  type r2 is record(a int, b sr);
    procedure proc1;
end 
CONTEXT:  compilation of PL/pgSQL package near line 1
WARNING:  Package created with compilation erors.
create or replace package pkg
is
    type r1 is record(a int, b pkg2.r2);
    procedure proc1;
end pkg;
/
--?.*
CONTEXT:  compilation of PL/pgSQL package near line 1
WARNING:  Package created with compilation erors.
-- valid is false
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+-----+----+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | pkg | r1 |      1 | plpgsql_depend_type | pkg2  | r2    |     3 | {DependenciesUndefined}
(1 row)

-- remove ref dependency, undefined
drop package pkg2;
NOTICE:  drop cascades to 2 other objects
--?.*
drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+-----+----+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | pkg | r1 |      1 | plpgsql_depend_type | pkg2  | r2    |     3 | {DependenciesUndefined}
(1 row)

-- remove dependency, no rows
drop package pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

 -- test 2 pkg_record_define_schema_type
drop type if exists sr cascade;
NOTICE:  type "sr" does not exist, skipping
create type sr as (a int, b int);
drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    type r1 is record(a int, b sr);
    procedure proc1;
end pkg;
/
-- valid is true
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on | refpos |        refsn        | refpn | refon | refot |                                                                  refast                                                                   
---------------------+-----+----+--------+---------------------+-------+-------+-------+-------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | pkg | r1 |      1 | plpgsql_depend_type | null  | sr    |     3 | {DependenciesType :typType c :typCategory C :attrInfo a:pg_catalog.int4,b:pg_catalog.int4, :isRel false :elemTypName <> :idxByTypName <>}
(1 row)

-- remove ref dependency, undefined
drop type sr cascade;
--?.*
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+-----+----+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | pkg | r1 |      1 | plpgsql_depend_type | null  | sr    |     3 | {DependenciesUndefined}
(1 row)

-- remove dependency, no rows
drop package pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 3 pkg_tbl_undefine_schema_type
drop type if exists undefsr cascade;
NOTICE:  type "undefsr" does not exist, skipping
drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    type tf1 is table of undefsr index by binary_integer;
    procedure proc1;
end pkg;
/
WARNING:  Type undefsr does not exist.
LINE 1:  PACKAGE  DECLARE  type tf1 is table of undefsr index by bin...
                                                ^
QUERY:   PACKAGE  DECLARE  type tf1 is table of undefsr index by binary_integer;
    procedure proc1;
end 
CONTEXT:  compilation of PL/pgSQL package near line 1
WARNING:  Package created with compilation erors.
-- valid is false
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on  | refpos |        refsn        | refpn |  refon  | refot |         refast          
---------------------+-----+-----+--------+---------------------+-------+---------+-------+-------------------------
 plpgsql_depend_type | pkg | tf1 |      1 | plpgsql_depend_type | null  | undefsr |     3 | {DependenciesUndefined}
(1 row)

-- define ref dependency
create type undefsr as (a int, b int);
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

drop type undefsr cascade;
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- remove dependency, no rows
drop package pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 4 pkg_tbl_define_schema_type
drop type if exists sr cascade;
NOTICE:  type "sr" does not exist, skipping
create type sr as (a int, b int);
drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    type tf1 is table of sr index by binary_integer;
    procedure proc1;
end pkg;
/
-- valid is true
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on  | refpos |        refsn        | refpn | refon | refot |                                                                  refast                                                                   
---------------------+-----+-----+--------+---------------------+-------+-------+-------+-------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | pkg | tf1 |      1 | plpgsql_depend_type | null  | sr    |     3 | {DependenciesType :typType c :typCategory C :attrInfo a:pg_catalog.int4,b:pg_catalog.int4, :isRel false :elemTypName <> :idxByTypName <>}
(1 row)

-- remove dependency
drop type sr cascade;
--?.*
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- remove dependency
drop package pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 5 pkg_varray_undefine_schema_type
drop type if exists undefsr cascade;
NOTICE:  type "undefsr" does not exist, skipping
drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    type varr1 is varray(1024) of undefsr;
    procedure proc1;
end pkg;
/
WARNING:  Type undefsr does not exist.
LINE 1:  PACKAGE  DECLARE  type varr1 is varray(1024) of undefsr;
                                                         ^
QUERY:   PACKAGE  DECLARE  type varr1 is varray(1024) of undefsr;
    procedure proc1;
end 
CONTEXT:  compilation of PL/pgSQL package near line 1
WARNING:  Package created with compilation erors.
-- valid is false
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  |  on   | refpos |        refsn        | refpn |  refon  | refot |         refast          
---------------------+-----+-------+--------+---------------------+-------+---------+-------+-------------------------
 plpgsql_depend_type | pkg | varr1 |      1 | plpgsql_depend_type | null  | undefsr |     3 | {DependenciesUndefined}
(1 row)

-- define ref dependency
create type undefsr as (a int, b int);
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

drop type undefsr cascade;
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- remove dependency, no rows
drop package pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 6 pkg_varray_define_schema_type
drop type if exists sr cascade;
NOTICE:  type "sr" does not exist, skipping
create type sr as (a int, b int);
drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    type t_arr_sr is varray(999) of sr;
    procedure proc1;
end pkg;
/
-- valid is true
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  |    on    | refpos |        refsn        | refpn | refon | refot |                                                                  refast                                                                   
---------------------+-----+----------+--------+---------------------+-------+-------+-------+-------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | pkg | t_arr_sr |      1 | plpgsql_depend_type | null  | sr    |     3 | {DependenciesType :typType c :typCategory C :attrInfo a:pg_catalog.int4,b:pg_catalog.int4, :isRel false :elemTypName <> :idxByTypName <>}
(1 row)

-- define ref dependency
drop type sr cascade;
NOTICE:  drop cascades to type sr[]
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- remove dependency, no rows
drop package pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 7 pkg_tbl_undefine_pkg_type
drop package if exists pkg2;
NOTICE:  package pkg2() does not exist, skipping
drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    type tf1 is table of pkg2.r1 index by binary_integer;
    procedure proc1;
end pkg;
/
WARNING:  Type r1 does not exist.
LINE 1:  PACKAGE  DECLARE  type tf1 is table of pkg2.r1 index by bin...
                                                ^
QUERY:   PACKAGE  DECLARE  type tf1 is table of pkg2.r1 index by binary_integer;
    procedure proc1;
end 
CONTEXT:  compilation of PL/pgSQL package near line 1
WARNING:  Package created with compilation erors.
-- valid is false
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on  | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+-----+-----+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | pkg | tf1 |      1 | plpgsql_depend_type | pkg2  | r1    |     3 | {DependenciesUndefined}
(1 row)

-- remove dependency
drop package pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 8 pkg_tbl_define_pkg_type
drop package if exists pkg2;
NOTICE:  package pkg2() does not exist, skipping
create or replace package pkg2
is
    type r1 is record(a int, b int);
    procedure proc1;
end pkg2;
/
drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    type tf1 is table of pkg2.r1 index by binary_integer;
    procedure proc1;
end pkg;
/
-- valid is true
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on  | refpos |        refsn        | refpn | refon | refot |                                                                  refast                                                                   
---------------------+-----+-----+--------+---------------------+-------+-------+-------+-------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | pkg | tf1 |      1 | plpgsql_depend_type | pkg2  | r1    |     3 | {DependenciesType :typType c :typCategory C :attrInfo a:pg_catalog.int4,b:pg_catalog.int4, :isRel false :elemTypName <> :idxByTypName <>}
(1 row)

-- define ref dependency
drop package pkg2;
NOTICE:  drop cascades to 2 other objects
--?.*
drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- remove dependency, no rows
drop package pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 9 pkg_varray_undefine_pkg_type
drop package if exists pkg2;
NOTICE:  package pkg2() does not exist, skipping
drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    type t_arr_sr is varray(999) of pkg2.r1;
    procedure proc1;
end pkg;
/
WARNING:  Type r1 does not exist.
LINE 1:  PACKAGE  DECLARE  type t_arr_sr is varray(999) of pkg2.r1;
                                                           ^
QUERY:   PACKAGE  DECLARE  type t_arr_sr is varray(999) of pkg2.r1;
    procedure proc1;
end 
CONTEXT:  compilation of PL/pgSQL package near line 1
WARNING:  Package created with compilation erors.
-- valid is false
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  |    on    | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+-----+----------+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | pkg | t_arr_sr |      1 | plpgsql_depend_type | pkg2  | r1    |     3 | {DependenciesUndefined}
(1 row)

-- remove dependency
drop package pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 10 pkg_varray_define_pkg_type
drop package if exists pkg2;
NOTICE:  package pkg2() does not exist, skipping
create or replace package pkg2
is
    type r1 is record(a int, b int);
    procedure proc1;
end pkg2;
/
drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    type tf1 is varray(999) of pkg2.r1;
    procedure proc1;
end pkg;
/
-- valid is true
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on  | refpos |        refsn        | refpn | refon | refot |                                                                  refast                                                                   
---------------------+-----+-----+--------+---------------------+-------+-------+-------+-------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | pkg | tf1 |      1 | plpgsql_depend_type | pkg2  | r1    |     3 | {DependenciesType :typType c :typCategory C :attrInfo a:pg_catalog.int4,b:pg_catalog.int4, :isRel false :elemTypName <> :idxByTypName <>}
(1 row)

-- define ref dependency
drop package pkg2;
NOTICE:  drop cascades to 2 other objects
--?.*
drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- remove dependency, no rows
drop package pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 11 pkg_record_undefine_table_rowtype
drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    type r1 is record(a int, c undefStu%RowType);
    procedure proc1;
end pkg;
/
WARNING:  relation "undefstu" does not exist when parse word.
CONTEXT:  compilation of PL/pgSQL package near line 1
WARNING:  Type r1 depends on an undefined type.
CONTEXT:  compilation of PL/pgSQL package near line 1
WARNING:  Package created with compilation erors.
-- valid is false
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on | refpos |        refsn        | refpn |  refon   | refot |         refast          
---------------------+-----+----+--------+---------------------+-------+----------+-------+-------------------------
 plpgsql_depend_type | pkg | r1 |      1 | plpgsql_depend_type | null  | undefstu |     3 | {DependenciesUndefined}
(1 row)

-- remove dependency
drop package pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 12 pkg_record_define_table_rowtype
select create_data_table();
NOTICE:  table "stu" does not exist, skipping
CONTEXT:  SQL statement "drop table if exists stu"
PL/pgSQL function create_data_table() line 3 at SQL statement
referenced column: create_data_table
 create_data_table 
-------------------
                 1
(1 row)

drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    type r1 is record(a int, c stu%RowType);
    procedure proc1;
end pkg;
/
-- valid is true
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on | refpos |        refsn        | refpn | refon | refot |                                                                                           refast                                                                                            
---------------------+-----+----+--------+---------------------+-------+-------+-------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | pkg | r1 |      1 | plpgsql_depend_type | null  | stu   |     3 | {DependenciesType :typType c :typCategory C :attrInfo sno:pg_catalog.int4,name:pg_catalog.varchar,sex:pg_catalog.varchar,cno:pg_catalog.int4, :isRel true :elemTypName <> :idxByTypName <>}
(1 row)

alter table stu add column z int;
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on | refpos |        refsn        | refpn | refon | refot |                                                                                                    refast                                                                                                     
---------------------+-----+----+--------+---------------------+-------+-------+-------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | pkg | r1 |      1 | plpgsql_depend_type | null  | stu   |     3 | {DependenciesType :typType c :typCategory C :attrInfo sno:pg_catalog.int4,name:pg_catalog.varchar,sex:pg_catalog.varchar,cno:pg_catalog.int4,z:pg_catalog.int4, :isRel true :elemTypName <> :idxByTypName <>}
(1 row)

alter package pkg compile;
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on | refpos |        refsn        | refpn | refon | refot |                                                                                                    refast                                                                                                     
---------------------+-----+----+--------+---------------------+-------+-------+-------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | pkg | r1 |      1 | plpgsql_depend_type | null  | stu   |     3 | {DependenciesType :typType c :typCategory C :attrInfo sno:pg_catalog.int4,name:pg_catalog.varchar,sex:pg_catalog.varchar,cno:pg_catalog.int4,z:pg_catalog.int4, :isRel true :elemTypName <> :idxByTypName <>}
(1 row)

alter table stu drop column z;
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on | refpos |        refsn        | refpn | refon | refot |                                                                                           refast                                                                                            
---------------------+-----+----+--------+---------------------+-------+-------+-------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | pkg | r1 |      1 | plpgsql_depend_type | null  | stu   |     3 | {DependenciesType :typType c :typCategory C :attrInfo sno:pg_catalog.int4,name:pg_catalog.varchar,sex:pg_catalog.varchar,cno:pg_catalog.int4, :isRel true :elemTypName <> :idxByTypName <>}
(1 row)

alter package pkg compile;
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on | refpos |        refsn        | refpn | refon | refot |                                                                                           refast                                                                                            
---------------------+-----+----+--------+---------------------+-------+-------+-------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | pkg | r1 |      1 | plpgsql_depend_type | null  | stu   |     3 | {DependenciesType :typType c :typCategory C :attrInfo sno:pg_catalog.int4,name:pg_catalog.varchar,sex:pg_catalog.varchar,cno:pg_catalog.int4, :isRel true :elemTypName <> :idxByTypName <>}
(1 row)

alter table stu rename to newstu;
ERROR:  The rename operator on stu is not allowed, because it is dependent on another object.
-- remove dependency, no drop
select drop_data_table();
ERROR:  cannot drop table stu because other objects depend on it
--?.*
HINT:  Use DROP ... CASCADE to drop the dependent objects too.
CONTEXT:  SQL statement "drop table if exists stu"
PL/pgSQL function drop_data_table() line 3 at SQL statement
referenced column: drop_data_table
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on | refpos |        refsn        | refpn | refon | refot |                                                                                           refast                                                                                            
---------------------+-----+----+--------+---------------------+-------+-------+-------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | pkg | r1 |      1 | plpgsql_depend_type | null  | stu   |     3 | {DependenciesType :typType c :typCategory C :attrInfo sno:pg_catalog.int4,name:pg_catalog.varchar,sex:pg_catalog.varchar,cno:pg_catalog.int4, :isRel true :elemTypName <> :idxByTypName <>}
(1 row)

-- remove dependency, undefined
select drop_data_table_cascade();
--?.*
CONTEXT:  SQL statement "drop table if exists stu cascade"
PL/pgSQL function drop_data_table_cascade() line 3 at SQL statement
referenced column: drop_data_table_cascade
 drop_data_table_cascade 
-------------------------
                       1
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+-----+----+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | pkg | r1 |      1 | plpgsql_depend_type | null  | stu   |     3 | {DependenciesUndefined}
(1 row)

-- remove dependency, no rows
drop package pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 13 pkg_record_undefine_table_undefine_col_type
drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    type r1 is record(a int, c undefStu.undefname%Type);
    procedure proc1;
end pkg;
/
WARNING:  invalid type name "undefStu.undefname%Type"
LINE 1:  PACKAGE  DECLARE  type r1 is record(a int, c undefStu.undef...
                                                      ^
QUERY:   PACKAGE  DECLARE  type r1 is record(a int, c undefStu.undefname%Type);
    procedure proc1;
end 
CONTEXT:  compilation of PL/pgSQL package near line 1
WARNING:  Package created with compilation erors.
-- valid is true
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- remove dependency, no rows
drop package pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 14 pkg_record_define_table_undefine_col_type
drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    type r1 is record(a int, c stu.undefname%Type);
    procedure proc1;
end pkg;
/
WARNING:  invalid type name "stu.undefname%Type"
LINE 1:  PACKAGE  DECLARE  type r1 is record(a int, c stu.undefname%...
                                                      ^
QUERY:   PACKAGE  DECLARE  type r1 is record(a int, c stu.undefname%Type);
    procedure proc1;
end 
CONTEXT:  compilation of PL/pgSQL package near line 1
WARNING:  Package created with compilation erors.
-- valid is false
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- remove dependency, no rows
drop package pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 15 pkg_record_define_table_col_type
select create_data_table();
NOTICE:  table "stu" does not exist, skipping
CONTEXT:  SQL statement "drop table if exists stu"
PL/pgSQL function create_data_table() line 3 at SQL statement
referenced column: create_data_table
 create_data_table 
-------------------
                 1
(1 row)

drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    type r1 is record(a int, c stu.name%Type);
    procedure proc1;
end pkg;
/
-- valid is true
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on | refpos |        refsn        | refpn | refon | refot |                                                                                           refast                                                                                            
---------------------+-----+----+--------+---------------------+-------+-------+-------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | pkg | r1 |      1 | plpgsql_depend_type | null  | stu   |     3 | {DependenciesType :typType c :typCategory C :attrInfo sno:pg_catalog.int4,name:pg_catalog.varchar,sex:pg_catalog.varchar,cno:pg_catalog.int4, :isRel true :elemTypName <> :idxByTypName <>}
(1 row)

-- remove dependency, undefined
select drop_data_table();
 drop_data_table 
-----------------
               1
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+-----+----+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | pkg | r1 |      1 | plpgsql_depend_type | null  | stu   |     3 | {DependenciesUndefined}
(1 row)

-- remove dependency, no rows
drop package pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 16 pkg_record_define_pkg_v1_type
drop package if exists pkg2;
NOTICE:  package pkg2() does not exist, skipping
create or replace package pkg2
is
    v1 int;
    procedure proc1;
end pkg2;
/
drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    type r1 is record(a int, c pkg2.v1%Type);
    procedure proc1;
end pkg;
/
-- valid is true
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on | refpos |        refsn        | refpn | refon | refot |                                  refast                                  
---------------------+-----+----+--------+---------------------+-------+-------+-------+--------------------------------------------------------------------------
 plpgsql_depend_type | pkg | r1 |      1 | plpgsql_depend_type | pkg2  | v1    |     2 | {DependenciesVariable :typName pg_catalog.int4 :typMod -1 :extraInfo <>}
(1 row)

-- define ref dependency, undefined
drop package pkg2;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+-----+----+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | pkg | r1 |      1 | plpgsql_depend_type | pkg2  | v1    |     2 | {DependenciesUndefined}
(1 row)

-- remove dependency, no rows
drop package pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 16 pkg_record_define_pkg_r1_rowtype
drop package if exists pkg2;
NOTICE:  package pkg2() does not exist, skipping
create or replace package pkg2
is
    type r2 is record(a int, b int);
    procedure proc1;
end pkg2;
/
drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    type r1 is record(a int, c pkg2.r2%RowType);
    procedure proc1;
end pkg;
/
ERROR:  schema "pkg2" does not exist
CONTEXT:  compilation of PL/pgSQL package near line 1
-- compile error
-- valid is none
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- define ref dependency
drop package pkg2;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- remove dependency, no rows
drop package pkg;
ERROR:  package pkg does not exist
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 17 pkg_record_define_schema_pkg_r1_rowtype
drop package if exists pkg2;
NOTICE:  package pkg2() does not exist, skipping
create or replace package pkg2
is
    type r2 is record(a int, b int);
    procedure proc1;
end pkg2;
/
drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    type r1 is record(a int, c plpgsql_depend_type.pkg2.r2%RowType);
    procedure proc1;
end pkg;
/
ERROR:  cross-database references are not implemented: "plpgsql_depend_type.pkg2.r2"
CONTEXT:  compilation of PL/pgSQL package near line 1
-- compile error
-- valid is none
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- define ref dependency
drop package pkg2;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- remove dependency, no rows
drop package pkg;
ERROR:  package pkg does not exist
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 18 pkg_body_record_define_schema
drop type if exists sr cascade;
NOTICE:  type "sr" does not exist, skipping
create type sr as (a int, b int);
drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    function proc1() return int;
end pkg;
/
create or replace package body pkg
is
    type r1 is record(a int, b sr);
    function proc1() return int as
    begin
        return 1;
    end;
end pkg;
/
-- valid is true
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on | refpos |        refsn        | refpn | refon | refot |                                                                  refast                                                                   
---------------------+-----+----+--------+---------------------+-------+-------+-------+-------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | pkg | r1 |      1 | plpgsql_depend_type | null  | sr    |     3 | {DependenciesType :typType c :typCategory C :attrInfo a:pg_catalog.int4,b:pg_catalog.int4, :isRel false :elemTypName <> :idxByTypName <>}
(1 row)

-- define ref dependency
drop type sr cascade;
--?.*
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+-----+----+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | pkg | r1 |      1 | plpgsql_depend_type | null  | sr    |     3 | {DependenciesUndefined}
(1 row)

-- remove dependency, no rows
drop package pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 19 pkg_body_tableof_define_schema
drop type if exists sr cascade;
NOTICE:  type "sr" does not exist, skipping
create type sr as (a int, b int);
drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    function proc1() return int;
end pkg;
/
create or replace package body pkg
is
    type tf1 is table of sr index by binary_integer;
    function proc1() return int as
    begin
        return 1;
    end;
end pkg;
/
-- valid is true
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on  | refpos |        refsn        | refpn | refon | refot |                                                                  refast                                                                   
---------------------+-----+-----+--------+---------------------+-------+-------+-------+-------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | pkg | tf1 |      1 | plpgsql_depend_type | null  | sr    |     3 | {DependenciesType :typType c :typCategory C :attrInfo a:pg_catalog.int4,b:pg_catalog.int4, :isRel false :elemTypName <> :idxByTypName <>}
(1 row)

-- define ref dependency
drop type sr cascade;
--?.*
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- remove dependency, no rows
drop package pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 20 pkg_body_varray_define_schema
drop type if exists sr cascade;
NOTICE:  type "sr" does not exist, skipping
create type sr as (a int, b int);
drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    function proc1() return int;
end pkg;
/
create or replace package body pkg
is
    type t_arr_sr is varray(999) of sr;
    function proc1() return int as
    begin
        return 1;
    end;
end pkg;
/
-- valid is true
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  |    on    | refpos |        refsn        | refpn | refon | refot |                                                                  refast                                                                   
---------------------+-----+----------+--------+---------------------+-------+-------+-------+-------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | pkg | t_arr_sr |      1 | plpgsql_depend_type | null  | sr    |     3 | {DependenciesType :typType c :typCategory C :attrInfo a:pg_catalog.int4,b:pg_catalog.int4, :isRel false :elemTypName <> :idxByTypName <>}
(1 row)

-- define ref dependency
drop type sr cascade;
NOTICE:  drop cascades to type sr[]
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- remove dependency, no rows
drop package pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 21 pkg_body_record_undefine_schema_type
drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    function proc1() return int;
end pkg;
/
create or replace package body pkg
is
    type t_arr_sr is varray(999) of undefsr;
    function proc1() return int as
    begin
        return 1;
    end;
end pkg;
/
WARNING:  Type undefsr does not exist.
LINE 1:  PACKAGE  DECLARE  type t_arr_sr is varray(999) of undefsr;
                                                           ^
QUERY:   PACKAGE  DECLARE  type t_arr_sr is varray(999) of undefsr;
    function proc1() return int as
    begin
        return 1;
    end;
end 
CONTEXT:  compilation of PL/pgSQL package near line 1
WARNING:  Package Body created with compilation erors.
-- valid is false
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select valid from pg_object where object_type='B' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  |    on    | refpos |        refsn        | refpn |  refon  | refot |         refast          
---------------------+-----+----------+--------+---------------------+-------+---------+-------+-------------------------
 plpgsql_depend_type | pkg | t_arr_sr |      1 | plpgsql_depend_type | null  | undefsr |     3 | {DependenciesUndefined}
(1 row)

-- remove dependency, no rows
drop package pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 22 pkg_spec_var_used_undefine_pkg_type
drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    v_1 pkg2.r1;
    procedure proc1;
end pkg;
/
WARNING:  Type r1 does not exist.
LINE 1:  PACKAGE  DECLARE  v_1 pkg2.r1;
                               ^
QUERY:   PACKAGE  DECLARE  v_1 pkg2.r1;
    procedure proc1;
end 
CONTEXT:  compilation of PL/pgSQL package near line 1
WARNING:  Package created with compilation erors.
-- valid is true
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on  | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+-----+-----+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | pkg | pkg |      2 | plpgsql_depend_type | pkg2  | r1    |     3 | {DependenciesUndefined}
(1 row)

-- define ref dependency
drop package pkg2;
ERROR:  package pkg2 does not exist
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on  | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+-----+-----+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | pkg | pkg |      2 | plpgsql_depend_type | pkg2  | r1    |     3 | {DependenciesUndefined}
(1 row)

-- remove dependency, no rows
drop package pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 23 pkg_spec_var_used_define_schema_type
drop type if exists sr cascade;
NOTICE:  type "sr" does not exist, skipping
create type sr as (a int, b int);
drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    v_1 sr;
    procedure proc1;
end pkg;
/
-- valid is true
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on  | refpos |        refsn        | refpn | refon | refot |                                                                  refast                                                                   
---------------------+-----+-----+--------+---------------------+-------+-------+-------+-------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | pkg | pkg |      2 | plpgsql_depend_type | null  | sr    |     3 | {DependenciesType :typType c :typCategory C :attrInfo a:pg_catalog.int4,b:pg_catalog.int4, :isRel false :elemTypName <> :idxByTypName <>}
(1 row)

-- define ref dependency
drop type sr cascade;
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on  | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+-----+-----+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | pkg | pkg |      2 | plpgsql_depend_type | null  | sr    |     3 | {DependenciesUndefined}
(1 row)

-- remove dependency, no rows
drop package pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 24 pkg_body_var_used_define_schema_type
drop type if exists sr cascade;
NOTICE:  type "sr" does not exist, skipping
create type sr as(a int, b int);
drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    procedure proc1;
end pkg;
/
create or replace package body pkg
is
    v_1 sr;
    procedure proc1() as  begin null; end;
end pkg;
/
-- valid is true
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select valid from pg_object where object_type='B' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on  | refpos |        refsn        | refpn | refon | refot |                                                                  refast                                                                   
---------------------+-----+-----+--------+---------------------+-------+-------+-------+-------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | pkg | pkg |     16 | plpgsql_depend_type | null  | sr    |     3 | {DependenciesType :typType c :typCategory C :attrInfo a:pg_catalog.int4,b:pg_catalog.int4, :isRel false :elemTypName <> :idxByTypName <>}
(1 row)

-- define ref dependency
drop type sr cascade;
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select valid from pg_object where object_type='B' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on  | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+-----+-----+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | pkg | pkg |     16 | plpgsql_depend_type | null  | sr    |     3 | {DependenciesUndefined}
(1 row)

-- remove dependency, no rows
drop package pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select valid from pg_object where object_type='B' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 25 pkg_proc_body_var_used_define_schema_type
drop type if exists sr cascade;
NOTICE:  type "sr" does not exist, skipping
create type sr as(a int, b int);
drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    procedure proc1;
end pkg;
/
create or replace package body pkg
is
    procedure proc1() as  
    declare
        v_1 sr;
    begin null; end;
end pkg;
/
-- valid is true
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select valid from pg_object where object_type='B' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on  | refpos |        refsn        | refpn | refon | refot |                                                                  refast                                                                   
---------------------+-----+-----+--------+---------------------+-------+-------+-------+-------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | pkg | pkg |     16 | plpgsql_depend_type | null  | sr    |     3 | {DependenciesType :typType c :typCategory C :attrInfo a:pg_catalog.int4,b:pg_catalog.int4, :isRel false :elemTypName <> :idxByTypName <>}
(1 row)

-- define ref dependency, undefined
drop type sr cascade;
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select valid from pg_object where object_type='B' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          | pn  | on  | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+-----+-----+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | pkg | pkg |     16 | plpgsql_depend_type | null  | sr    |     3 | {DependenciesUndefined}
(1 row)

-- remove dependency, no rows
drop package pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select valid from pg_object where object_type='B' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 26 proc_body_var_used_define_schema_type
drop type if exists sr cascade;
NOTICE:  type "sr" does not exist, skipping
create type sr as(a int, b int);
drop procedure if exists proc1;
NOTICE:  function proc1() does not exist, skipping
create or replace procedure proc1() as  
declare
    v_1 sr;
begin 
    null;
end;
/
-- valid is true
select valid from pg_object where object_type='P' and object_oid in (select Oid from pg_proc where propackageid = 0 and proname='proc1' and pronamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1()') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1()') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |   on    | refpos |        refsn        | refpn | refon | refot |                                                                  refast                                                                   
---------------------+------+---------+--------+---------------------+-------+-------+-------+-------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1() |      8 | plpgsql_depend_type | null  | sr    |     3 | {DependenciesType :typType c :typCategory C :attrInfo a:pg_catalog.int4,b:pg_catalog.int4, :isRel false :elemTypName <> :idxByTypName <>}
(1 row)

-- define ref dependency
drop type sr cascade;
select valid from pg_object where object_type='P' and object_oid in (select Oid from pg_proc where propackageid = 0 and proname='proc1' and pronamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1()') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1()') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |   on    | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+------+---------+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | null | proc1() |      8 | plpgsql_depend_type | null  | sr    |     3 | {DependenciesUndefined}
(1 row)

-- remove dependency, no rows
drop procedure proc1;
select valid from pg_object where object_type='P' and object_oid in (select Oid from pg_proc where propackageid = 0 and proname='proc1' and pronamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1()') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1()') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

 -- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1()') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1()') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- test 27 proc_body_var_used_define_pkg_tablof
drop type if exists sr cascade;
NOTICE:  type "sr" does not exist, skipping
create type sr as(a int, b int);
drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    type tf1 is table of sr index by binary_integer;
end pkg;
/
drop procedure if exists proc1;
NOTICE:  function proc1() does not exist, skipping
create or replace procedure proc1() as  
declare
    v_tf1 pkg.tf1;
begin 
    null;
end;
/
-- valid is true
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select valid from pg_object where object_type='B' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select valid from pg_object where object_type='P' and object_oid in (select Oid from pg_proc where propackageid = 0 and proname='proc1' and pronamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1()') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1()') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |   on    | refpos |        refsn        | refpn | refon | refot |                                                                  refast                                                                  
---------------------+------+---------+--------+---------------------+-------+-------+-------+------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1() |      8 | plpgsql_depend_type | pkg   | tf1   |     3 | {DependenciesType :typType o :typCategory F :attrInfo <> :isRel false :elemTypName plpgsql_depend_type.sr :idxByTypName pg_catalog.int4}
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |   on    | refpos |        refsn        | refpn | refon | refot |                                                                  refast                                                                   
---------------------+------+---------+--------+---------------------+-------+-------+-------+-------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1() |      8 | plpgsql_depend_type | pkg   | tf1   |     3 | {DependenciesType :typType o :typCategory F :attrInfo <> :isRel false :elemTypName plpgsql_depend_type.sr :idxByTypName pg_catalog.int4}
 plpgsql_depend_type | pkg  | tf1     |      1 | plpgsql_depend_type | null  | sr    |     3 | {DependenciesType :typType c :typCategory C :attrInfo a:pg_catalog.int4,b:pg_catalog.int4, :isRel false :elemTypName <> :idxByTypName <>}
(2 rows)

-- drop ref dependency
drop type sr cascade;
--?.*
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select valid from pg_object where object_type='B' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select valid from pg_object where object_type='P' and object_oid in (select Oid from pg_proc where propackageid = 0 and proname='proc1' and pronamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1()') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1()') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |   on    | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+------+---------+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | null | proc1() |      8 | plpgsql_depend_type | pkg   | tf1   |     3 | {DependenciesUndefined}
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |   on    | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+------+---------+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | null | proc1() |      8 | plpgsql_depend_type | pkg   | tf1   |     3 | {DependenciesUndefined}
(1 row)

-- remove dependency
drop package pkg;
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select valid from pg_object where object_type='B' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select valid from pg_object where object_type='P' and object_oid in (select Oid from pg_proc where propackageid = 0 and proname='proc1' and pronamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1()') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1()') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |   on    | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+------+---------+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | null | proc1() |      8 | plpgsql_depend_type | pkg   | tf1   |     3 | {DependenciesUndefined}
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |   on    | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+------+---------+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | null | proc1() |      8 | plpgsql_depend_type | pkg   | tf1   |     3 | {DependenciesUndefined}
(1 row)

-- remove dependency, no rows
drop procedure proc1;
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select valid from pg_object where object_type='B' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select valid from pg_object where object_type='P' and object_oid in (select Oid from pg_proc where propackageid = 0 and proname='proc1' and pronamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1()') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1()') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 28 proc_body_var_used_define_pkg_varray
drop type if exists sr cascade;
NOTICE:  type "sr" does not exist, skipping
create type sr as(a int, b int);
drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    type arr1 is varray(888) of sr;
    type tf1 is table of sr index by binary_integer;
end pkg;
/
drop procedure if exists proc1;
NOTICE:  function proc1() does not exist, skipping
create or replace procedure proc1() as  
declare
    v_arr1 pkg.arr1;
    v_tf1 pkg.tf1;
begin 
    null;
end;
/
-- valid is true
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select valid from pg_object where object_type='B' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select valid from pg_object where object_type='P' and object_oid in (select Oid from pg_proc where propackageid = 0 and proname='proc1' and pronamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1()') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1()') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |   on    | refpos |        refsn        | refpn | refon | refot |                                                                  refast                                                                  
---------------------+------+---------+--------+---------------------+-------+-------+-------+------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1() |      8 | plpgsql_depend_type | pkg   | arr1  |     3 | {DependenciesType :typType b :typCategory A :attrInfo <> :isRel false :elemTypName plpgsql_depend_type.sr :idxByTypName <>}
 plpgsql_depend_type | null | proc1() |      8 | plpgsql_depend_type | pkg   | tf1   |     3 | {DependenciesType :typType o :typCategory F :attrInfo <> :isRel false :elemTypName plpgsql_depend_type.sr :idxByTypName pg_catalog.int4}
(2 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |   on    | refpos |        refsn        | refpn | refon | refot |                                                                  refast                                                                   
---------------------+------+---------+--------+---------------------+-------+-------+-------+-------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | pkg  | arr1    |      1 | plpgsql_depend_type | null  | sr    |     3 | {DependenciesType :typType c :typCategory C :attrInfo a:pg_catalog.int4,b:pg_catalog.int4, :isRel false :elemTypName <> :idxByTypName <>}
 plpgsql_depend_type | null | proc1() |      8 | plpgsql_depend_type | pkg   | arr1  |     3 | {DependenciesType :typType b :typCategory A :attrInfo <> :isRel false :elemTypName plpgsql_depend_type.sr :idxByTypName <>}
 plpgsql_depend_type | null | proc1() |      8 | plpgsql_depend_type | pkg   | tf1   |     3 | {DependenciesType :typType o :typCategory F :attrInfo <> :isRel false :elemTypName plpgsql_depend_type.sr :idxByTypName pg_catalog.int4}
 plpgsql_depend_type | pkg  | tf1     |      1 | plpgsql_depend_type | null  | sr    |     3 | {DependenciesType :typType c :typCategory C :attrInfo a:pg_catalog.int4,b:pg_catalog.int4, :isRel false :elemTypName <> :idxByTypName <>}
(4 rows)

-- drop ref dependency
drop type sr cascade;
NOTICE:  drop cascades to 2 other objects
--?.*
drop cascades to type sr[]
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select valid from pg_object where object_type='B' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select valid from pg_object where object_type='P' and object_oid in (select Oid from pg_proc where propackageid = 0 and proname='proc1' and pronamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1()') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1()') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |   on    | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+------+---------+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | null | proc1() |      8 | plpgsql_depend_type | pkg   | arr1  |     3 | {DependenciesUndefined}
 plpgsql_depend_type | null | proc1() |      8 | plpgsql_depend_type | pkg   | tf1   |     3 | {DependenciesUndefined}
(2 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |   on    | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+------+---------+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | null | proc1() |      8 | plpgsql_depend_type | pkg   | arr1  |     3 | {DependenciesUndefined}
 plpgsql_depend_type | null | proc1() |      8 | plpgsql_depend_type | pkg   | tf1   |     3 | {DependenciesUndefined}
(2 rows)

-- remove ref dependency
drop package pkg;
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select valid from pg_object where object_type='B' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select valid from pg_object where object_type='P' and object_oid in (select Oid from pg_proc where propackageid = 0 and proname='proc1' and pronamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1()') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1()') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |   on    | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+------+---------+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | null | proc1() |      8 | plpgsql_depend_type | pkg   | arr1  |     3 | {DependenciesUndefined}
 plpgsql_depend_type | null | proc1() |      8 | plpgsql_depend_type | pkg   | tf1   |     3 | {DependenciesUndefined}
(2 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |   on    | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+------+---------+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | null | proc1() |      8 | plpgsql_depend_type | pkg   | arr1  |     3 | {DependenciesUndefined}
 plpgsql_depend_type | null | proc1() |      8 | plpgsql_depend_type | pkg   | tf1   |     3 | {DependenciesUndefined}
(2 rows)

-- remove dependency, no rows
drop procedure proc1;
select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select valid from pg_object where object_type='B' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select valid from pg_object where object_type='P' and object_oid in (select Oid from pg_proc where propackageid = 0 and proname='proc1' and pronamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1()') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1()') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 29 proc_param_type_used_define_schema_type
drop type if exists sr cascade;
NOTICE:  type "sr" does not exist, skipping
create type sr as(a int, b int);
drop procedure if exists proc1;
NOTICE:  function proc1() does not exist, skipping
create or replace procedure proc1(v_1 sr) as  
begin 
    null;
end;
/
-- valid is true
select valid from pg_object where object_type='P' and object_oid in (select Oid from pg_proc where propackageid = 0 and proname='proc1' and pronamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(plpgsql_depend_type.sr)') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(plpgsql_depend_type.sr)') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |              on               | refpos |        refsn        | refpn |             refon             | refot |                                                                  refast                                                                   
---------------------+------+-------------------------------+--------+---------------------+-------+-------------------------------+-------+-------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1(plpgsql_depend_type.sr) |      4 | plpgsql_depend_type | null  | sr                            |     3 | {DependenciesType :typType c :typCategory C :attrInfo a:pg_catalog.int4,b:pg_catalog.int4, :isRel false :elemTypName <> :idxByTypName <>}
                     |      |                               |        | plpgsql_depend_type | null  | proc1(plpgsql_depend_type.sr) |     5 | {DependenciesProchead :undefined false :proName proc1 :proArgSrc v_1\ sr :funcHeadSrc create\ or\ replace\ procedure\ proc1\(v_1\ sr\)}
(2 rows)

-- define ref dependency
drop type sr cascade;
select pr.proname, po.valid, pr.proargtypes, pr.proargsrc from pg_proc as pr inner join pg_object as po on po.object_type='P' and po.object_oid = pr.Oid where pr.propackageid=0 and pr.proname='proc1' and pr.pronamespace = (select Oid from pg_namespace where nspname='plpgsql_depend_type');
 proname | valid | proargtypes | proargsrc 
---------+-------+-------------+-----------
 proc1   | f     | 4408        | v_1 sr
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(pg_catalog.undefined)') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(pg_catalog.undefined)') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |             on              | refpos |        refsn        | refpn |            refon            | refot |                                                                 refast                                                                 
---------------------+------+-----------------------------+--------+---------------------+-------+-----------------------------+-------+----------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1(pg_catalog.undefined) |      4 | plpgsql_depend_type | null  | sr                          |     3 | {DependenciesUndefined}
                     |      |                             |        | plpgsql_depend_type | null  | proc1(pg_catalog.undefined) |     5 | {DependenciesProchead :undefined true :proName proc1 :proArgSrc v_1\ sr :funcHeadSrc create\ or\ replace\ procedure\ proc1\(v_1\ sr\)}
(2 rows)

  -- create ref dependency
create type sr as (a int, b int);
select pr.proname, po.valid, pr.proargtypes, pr.proargsrc from pg_proc as pr inner join pg_object as po on po.object_type='P' and po.object_oid = pr.Oid where pr.propackageid=0 and pr.proname='proc1' and pr.pronamespace = (select Oid from pg_namespace where nspname='plpgsql_depend_type');
 proname | valid | proargtypes | proargsrc 
---------+-------+-------------+-----------
--?.*
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(plpgsql_depend_type.sr)')
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(plpgsql_depend_type.sr)')
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |              on               | refpos |        refsn        | refpn |             refon             | refot |                                                                  refast                                                                   
---------------------+------+-------------------------------+--------+---------------------+-------+-------------------------------+-------+-------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1(plpgsql_depend_type.sr) |      4 | plpgsql_depend_type | null  | sr                            |     3 | {DependenciesType :typType c :typCategory C :attrInfo a:pg_catalog.int4,b:pg_catalog.int4, :isRel false :elemTypName <> :idxByTypName <>}
                     |      |                               |        | plpgsql_depend_type | null  | proc1(plpgsql_depend_type.sr) |     5 | {DependenciesProchead :undefined false :proName proc1 :proArgSrc v_1\ sr :funcHeadSrc create\ or\ replace\ procedure\ proc1\(v_1\ sr\)}
(2 rows)

-- remove dependency, no rows
drop procedure proc1;
select valid from pg_object where object_type='P' and object_oid in (select Oid from pg_proc where propackageid = 0 and proname='proc1' and pronamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(plpgsql_depend_type.sr)') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(plpgsql_depend_type.sr)') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

 -- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 30 proc_return_type_used_define_schema_type
drop type if exists sr cascade;
create type sr as(a int, b int);
drop function if exists proc1;
NOTICE:  function proc1() does not exist, skipping
create or replace function proc1() return sr as  
begin 
    null;
end;
/
-- valid is true
select valid from pg_object where object_type='P' and object_oid in (select Oid from pg_proc where propackageid = 0 and proname='proc1' and pronamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1()') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1()') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |   on    | refpos |        refsn        | refpn |  refon  | refot |                                                                  refast                                                                   
---------------------+------+---------+--------+---------------------+-------+---------+-------+-------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1() |      4 | plpgsql_depend_type | null  | sr      |     3 | {DependenciesType :typType c :typCategory C :attrInfo a:pg_catalog.int4,b:pg_catalog.int4, :isRel false :elemTypName <> :idxByTypName <>}
                     |      |         |        | plpgsql_depend_type | null  | proc1() |     5 | {DependenciesProchead :undefined false :proName proc1 :proArgSrc <> :funcHeadSrc create\ or\ replace\ function\ proc1\(\)\ return\ sr}
(2 rows)

-- remove ref dependency
drop type sr cascade;
select pr.proname, po.valid, pr.proargtypes, pr.proargsrc from pg_proc as pr inner join pg_object as po on po.object_type='P' and po.object_oid = pr.Oid where pr.propackageid=0 and pr.proname='proc1' and pr.pronamespace = (select Oid from pg_namespace where nspname='plpgsql_depend_type');
 proname | valid | proargtypes | proargsrc 
---------+-------+-------------+-----------
 proc1   | f     |             | 
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1()') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1()') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |   on    | refpos |        refsn        | refpn |  refon  | refot |                                                                refast                                                                 
---------------------+------+---------+--------+---------------------+-------+---------+-------+---------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1() |      4 | plpgsql_depend_type | null  | sr      |     3 | {DependenciesUndefined}
                     |      |         |        | plpgsql_depend_type | null  | proc1() |     5 | {DependenciesProchead :undefined true :proName proc1 :proArgSrc <> :funcHeadSrc create\ or\ replace\ function\ proc1\(\)\ return\ sr}
(2 rows)

 -- create ref dependency
create type sr as (a int, b int);
select pr.proname, po.valid, pr.proargtypes, pr.proargsrc from pg_proc as pr inner join pg_object as po on po.object_type='P' and po.object_oid = pr.Oid where pr.propackageid=0 and pr.proname='proc1' and pr.pronamespace = (select Oid from pg_namespace where nspname='plpgsql_depend_type');
 proname | valid | proargtypes | proargsrc 
---------+-------+-------------+-----------
 proc1   | f     |             | 
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1()')
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1()')
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |   on    | refpos |        refsn        | refpn |  refon  | refot |                                                                  refast                                                                   
---------------------+------+---------+--------+---------------------+-------+---------+-------+-------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1() |      4 | plpgsql_depend_type | null  | sr      |     3 | {DependenciesType :typType c :typCategory C :attrInfo a:pg_catalog.int4,b:pg_catalog.int4, :isRel false :elemTypName <> :idxByTypName <>}
                     |      |         |        | plpgsql_depend_type | null  | proc1() |     5 | {DependenciesProchead :undefined false :proName proc1 :proArgSrc <> :funcHeadSrc create\ or\ replace\ function\ proc1\(\)\ return\ sr}
(2 rows)

-- remove dependency, no rows
drop function proc1;
select valid from pg_object where object_type='P' and object_oid in (select Oid from pg_proc where propackageid = 0 and proname='proc1' and pronamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1()') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1()') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

 -- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 31 proc_param_type_used_undefine_schema_type
drop type if exists sr cascade;
drop procedure if exists proc1;
NOTICE:  function proc1() does not exist, skipping
create or replace procedure proc1(v_1 sr) as  
begin 
    null;
end;
/
WARNING:  Type sr does not exist.
WARNING:  Type proc1(pg_catalog.undefined) depends on an undefined type.
WARNING:  The header information of function proc1 is not defined.
CONTEXT:  compilation of PL/pgSQL function "proc1" near line 1
WARNING:  Procedure created with compilation erors.
-- valid is false
select valid from pg_object where object_type='P' and object_oid in (select Oid from pg_proc where propackageid = 0 and proname='proc1' and pronamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(pg_catalog.undefined)')
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(pg_catalog.undefined)')
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |             on              | refpos |        refsn        | refpn |            refon            | refot |                                                                 refast                                                                 
---------------------+------+-----------------------------+--------+---------------------+-------+-----------------------------+-------+----------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1(pg_catalog.undefined) |      4 | plpgsql_depend_type | null  | sr                          |     3 | {DependenciesUndefined}
                     |      |                             |        | plpgsql_depend_type | null  | proc1(pg_catalog.undefined) |     5 | {DependenciesProchead :undefined true :proName proc1 :proArgSrc v_1\ sr :funcHeadSrc create\ or\ replace\ procedure\ proc1\(v_1\ sr\)}
(2 rows)

-- create ref dependency
create type sr as (a int, b int);
select pr.proname, po.valid, pr.proargtypes, pr.proargsrc from pg_proc as pr inner join pg_object as po on
po.object_type='P' and po.object_oid = pr.Oid where pr.propackageid=0 and pr.proname='proc1' and pr.pronamespace = 
(select Oid from pg_namespace where nspname='plpgsql_depend_type');
 proname | valid | proargtypes | proargsrc 
---------+-------+-------------+-----------
--?.*
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(plpgsql_depend_type.sr)')
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(plpgsql_depend_type.sr)')
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |              on               | refpos |        refsn        | refpn |             refon             | refot |                                                                  refast                                                                   
---------------------+------+-------------------------------+--------+---------------------+-------+-------------------------------+-------+-------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1(plpgsql_depend_type.sr) |      4 | plpgsql_depend_type | null  | sr                            |     3 | {DependenciesType :typType c :typCategory C :attrInfo a:pg_catalog.int4,b:pg_catalog.int4, :isRel false :elemTypName <> :idxByTypName <>}
                     |      |                               |        | plpgsql_depend_type | null  | proc1(plpgsql_depend_type.sr) |     5 | {DependenciesProchead :undefined false :proName proc1 :proArgSrc v_1\ sr :funcHeadSrc create\ or\ replace\ procedure\ proc1\(v_1\ sr\)}
(2 rows)

-- define ref dependency
alter procedure proc1 compile;
select pr.proname, po.valid, pr.proargtypes, pr.proargsrc from pg_proc as pr inner join pg_object as po on po.object_type='P' and po.object_oid = pr.Oid where pr.propackageid=0 and pr.proname='proc1' and pr.pronamespace = (select Oid from pg_namespace where nspname='plpgsql_depend_type');
 proname | valid | proargtypes | proargsrc 
---------+-------+-------------+-----------
--?.*
(1 row)

drop type sr cascade;
select pr.proname, po.valid, pr.proargtypes, pr.proargsrc from pg_proc as pr inner join pg_object as po on po.object_type='P' and po.object_oid = pr.Oid where pr.propackageid=0 and pr.proname='proc1' and pr.pronamespace = (select Oid from pg_namespace where nspname='plpgsql_depend_type');
 proname | valid | proargtypes | proargsrc 
---------+-------+-------------+-----------
 proc1   | f     | 4408        | v_1 sr
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(pg_catalog.undefined)') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(pg_catalog.undefined)') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |             on              | refpos |        refsn        | refpn |            refon            | refot |                                                                 refast                                                                 
---------------------+------+-----------------------------+--------+---------------------+-------+-----------------------------+-------+----------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1(pg_catalog.undefined) |      4 | plpgsql_depend_type | null  | sr                          |     3 | {DependenciesUndefined}
                     |      |                             |        | plpgsql_depend_type | null  | proc1(pg_catalog.undefined) |     5 | {DependenciesProchead :undefined true :proName proc1 :proArgSrc v_1\ sr :funcHeadSrc create\ or\ replace\ procedure\ proc1\(v_1\ sr\)}
(2 rows)

-- remove dependency, no rows
drop procedure proc1;
select valid from pg_object where object_type='P' and object_oid in (select Oid from pg_proc where propackageid = 0 and proname='proc1' and pronamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(plpgsql_depend_type.sr)') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(plpgsql_depend_type.sr)') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

 -- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos
 from gs_dependencies where schemaname='plpgsql_depend_type'
 order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 32 proc_return_type_used_undefine_schema_type
drop type if exists sr cascade;
NOTICE:  type "sr" does not exist, skipping
drop function if exists proc1;
NOTICE:  function proc1() does not exist, skipping
create or replace function proc1() return sr as  
begin 
    null;
end;
/
WARNING:  Type sr does not exist.
WARNING:  type "sr" does not exist
WARNING:  Type proc1() depends on an undefined type.
WARNING:  The header information of function proc1 is not defined.
CONTEXT:  compilation of PL/pgSQL function "proc1" near line 1
WARNING:  Function created with compilation erors.
-- valid is false
select valid from pg_object where object_type='P' and object_oid in (select Oid from pg_proc where propackageid = 0 and proname='proc1' and pronamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1()') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1()') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |   on    | refpos |        refsn        | refpn |  refon  | refot |                                                                refast                                                                 
---------------------+------+---------+--------+---------------------+-------+---------+-------+---------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1() |      4 | plpgsql_depend_type | null  | sr      |     3 | {DependenciesUndefined}
                     |      |         |        | plpgsql_depend_type | null  | proc1() |     5 | {DependenciesProchead :undefined true :proName proc1 :proArgSrc <> :funcHeadSrc create\ or\ replace\ function\ proc1\(\)\ return\ sr}
(2 rows)

-- create ref dependency
create type sr as (a int, b int);
select pr.proname, po.valid, pr.proargtypes, pr.proargsrc from pg_proc as pr inner join pg_object as po on po.object_type='P' and po.object_oid = pr.Oid where pr.propackageid=0 and pr.proname='proc1' and pr.pronamespace = (select Oid from pg_namespace where nspname='plpgsql_depend_type');
 proname | valid | proargtypes | proargsrc 
---------+-------+-------------+-----------
 proc1   | f     |             | 
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1()') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1()') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |   on    | refpos |        refsn        | refpn |  refon  | refot |                                                                  refast                                                                   
---------------------+------+---------+--------+---------------------+-------+---------+-------+-------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1() |      4 | plpgsql_depend_type | null  | sr      |     3 | {DependenciesType :typType c :typCategory C :attrInfo a:pg_catalog.int4,b:pg_catalog.int4, :isRel false :elemTypName <> :idxByTypName <>}
                     |      |         |        | plpgsql_depend_type | null  | proc1() |     5 | {DependenciesProchead :undefined false :proName proc1 :proArgSrc <> :funcHeadSrc create\ or\ replace\ function\ proc1\(\)\ return\ sr}
(2 rows)

-- remove dependency
drop type sr cascade;
select pr.proname, po.valid, pr.proargtypes, pr.proargsrc from pg_proc as pr inner join pg_object as po on po.object_type='P' and po.object_oid = pr.Oid where pr.propackageid=0 and pr.proname='proc1' and pr.pronamespace = (select Oid from pg_namespace where nspname='plpgsql_depend_type');
 proname | valid | proargtypes | proargsrc 
---------+-------+-------------+-----------
 proc1   | f     |             | 
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1()') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1()') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |   on    | refpos |        refsn        | refpn |  refon  | refot |                                                                refast                                                                 
---------------------+------+---------+--------+---------------------+-------+---------+-------+---------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1() |      4 | plpgsql_depend_type | null  | sr      |     3 | {DependenciesUndefined}
                     |      |         |        | plpgsql_depend_type | null  | proc1() |     5 | {DependenciesProchead :undefined true :proName proc1 :proArgSrc <> :funcHeadSrc create\ or\ replace\ function\ proc1\(\)\ return\ sr}
(2 rows)

-- remove dependency, no rows
drop procedure proc1;
select valid from pg_object where object_type='P' and object_oid in (select Oid from pg_proc where propackageid = 0 and proname='proc1' and pronamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1()') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1()') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

 -- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1()') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1()') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

--test 33 proc_param_type_used_define_pkg_type
drop type if exists sr cascade;
NOTICE:  type "sr" does not exist, skipping
create type sr as (a int, b int);
drop package if exists pkg;
NOTICE:  package pkg() does not exist, skipping
create or replace package pkg
is
    type arr1 is varray(888) of sr;
    type tf1 is table of sr index by binary_integer;
    procedure proc1;
end pkg;
/
drop procedure if exists proc1;
NOTICE:  function proc1() does not exist, skipping
create or replace procedure proc1(v_1 pkg.arr1) as
begin 
    null;
end;
/
-- valid is true
select valid from pg_object where object_type='P' and object_oid in (select Oid from pg_proc where propackageid = 0 and proname='proc1' and pronamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 t
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(plpgsql_depend_type.pkg.arr1)') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(plpgsql_depend_type.pkg.arr1)') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |                 on                  | refpos |        refsn        | refpn |                refon                | refot |                                                                       refast                                                                        
---------------------+------+-------------------------------------+--------+---------------------+-------+-------------------------------------+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1(plpgsql_depend_type.pkg.arr1) |      4 | plpgsql_depend_type | pkg   | arr1                                |     3 | {DependenciesType :typType b :typCategory A :attrInfo <> :isRel false :elemTypName plpgsql_depend_type.sr :idxByTypName <>}
                     |      |                                     |        | plpgsql_depend_type | null  | proc1(plpgsql_depend_type.pkg.arr1) |     5 | {DependenciesProchead :undefined false :proName proc1 :proArgSrc v_1\ pkg.arr1 :funcHeadSrc create\ or\ replace\ procedure\ proc1\(v_1\ pkg.arr1\)}
(2 rows)

 -- remove ref dependency
create or replace package pkg
is
    type tf1 is table of sr index by binary_integer;
    procedure proc1;
end pkg;
/
select pr.proname, po.valid, pr.proargtypes, pr.proargsrc from pg_proc as pr inner join pg_object as po on po.object_type='P' and po.object_oid = pr.Oid where pr.propackageid=0 and pr.proname='proc1' and pr.pronamespace = (select Oid from pg_namespace where nspname='plpgsql_depend_type');
 proname | valid | proargtypes |  proargsrc   
---------+-------+-------------+--------------
 proc1   | f     | 4408        | v_1 pkg.arr1
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(pg_catalog.undefined)') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(pg_catalog.undefined)') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |             on              | refpos |        refsn        | refpn |            refon            | refot |                                                                       refast                                                                       
---------------------+------+-----------------------------+--------+---------------------+-------+-----------------------------+-------+----------------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1(pg_catalog.undefined) |      4 | plpgsql_depend_type | pkg   | arr1                        |     3 | {DependenciesUndefined}
                     |      |                             |        | plpgsql_depend_type | null  | proc1(pg_catalog.undefined) |     5 | {DependenciesProchead :undefined true :proName proc1 :proArgSrc v_1\ pkg.arr1 :funcHeadSrc create\ or\ replace\ procedure\ proc1\(v_1\ pkg.arr1\)}
(2 rows)

  -- create ref dependency
create or replace package pkg
is
    type arr1 is varray(888) of sr;
    procedure proc1;
end pkg;
/
select pr.proname, po.valid, pr.proargtypes, pr.proargsrc from pg_proc as pr inner join pg_object as po on po.object_type='P' and po.object_oid = pr.Oid where pr.propackageid=0 and pr.proname='proc1' and pr.pronamespace = (select Oid from pg_namespace where nspname='plpgsql_depend_type');
 proname | valid | proargtypes |  proargsrc   
---------+-------+-------------+--------------
--?.*
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(plpgsql_depend_type.pkg.arr1)') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(plpgsql_depend_type.pkg.arr1)') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |                 on                  | refpos |        refsn        | refpn |                refon                | refot |                                                                       refast                                                                        
---------------------+------+-------------------------------------+--------+---------------------+-------+-------------------------------------+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1(plpgsql_depend_type.pkg.arr1) |      4 | plpgsql_depend_type | pkg   | arr1                                |     3 | {DependenciesType :typType b :typCategory A :attrInfo <> :isRel false :elemTypName plpgsql_depend_type.sr :idxByTypName <>}
                     |      |                                     |        | plpgsql_depend_type | null  | proc1(plpgsql_depend_type.pkg.arr1) |     5 | {DependenciesProchead :undefined false :proName proc1 :proArgSrc v_1\ pkg.arr1 :funcHeadSrc create\ or\ replace\ procedure\ proc1\(v_1\ pkg.arr1\)}
(2 rows)

-- remove dependency, no rows
drop procedure proc1;
select valid from pg_object where object_type='P' and object_oid in (select Oid from pg_proc where propackageid = 0 and proname='proc1' and pronamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(plpgsql_depend_type.pkg.arr1)') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(plpgsql_depend_type.pkg.arr1)') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

 -- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
     schemaname      | packagename | type | name |                                                                  objnode                                                                  
---------------------+-------------+------+------+-------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null        |    3 | sr   | {DependenciesType :typType c :typCategory C :attrInfo a:pg_catalog.int4,b:pg_catalog.int4, :isRel false :elemTypName <> :idxByTypName <>}
(1 row)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
     schemaname      | packagename | objectname | refobjpos 
---------------------+-------------+------------+-----------
 plpgsql_depend_type | pkg         | arr1       |         1
(1 row)

-- test 34 proc_param_type_used_define_pkg_type
drop type if exists sr cascade;
NOTICE:  drop cascades to type sr[]
create type sr as (a int, b int);
drop package if exists pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
create or replace package pkg
is
    type arr1 is varray(888) of sr;
    type tf1 is table of sr index by binary_integer;
    procedure proc1;
end pkg;
/
drop procedure if exists proc1;
NOTICE:  function proc1() does not exist, skipping
create or replace function proc1() return pkg.tf1 as
begin 
    null;
end;
/
ERROR:  table of index type is not supported as function return type.
DETAIL:  N/A
-- valid is true
select valid from pg_object where object_type='P' and object_oid in (select Oid from pg_proc where propackageid = 0 and proname='proc1' and pronamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1()') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1()') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

 -- remove ref dependency
create or replace package pkg
is
    type arr1 is varray(888) of sr;
    procedure proc1;
end pkg;
/
select pr.proname, po.valid, pr.proargtypes, pr.proargsrc from pg_proc as pr inner join pg_object as po on po.object_type='P' and po.object_oid = pr.Oid where pr.propackageid=0 and pr.proname='proc1' and pr.pronamespace = (select Oid from pg_namespace where nspname='plpgsql_depend_type');
 proname | valid | proargtypes | proargsrc 
---------+-------+-------------+-----------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1()') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1()') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

  -- create ref dependency
create or replace package pkg
is
    type tf1 is table of sr index by binary_integer;
    procedure proc1;
end pkg;
/
select pr.proname, po.valid, pr.proargtypes, pr.proargsrc from pg_proc as pr inner join pg_object as po on po.object_type='P' and po.object_oid = pr.Oid where pr.propackageid=0 and pr.proname='proc1' and pr.pronamespace = (select Oid from pg_namespace where nspname='plpgsql_depend_type');
 proname | valid | proargtypes | proargsrc 
---------+-------+-------------+-----------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1()') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1()') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

-- remove dependency, no rows
drop procedure proc1;
ERROR:  function proc1 does not exist
select valid from pg_object where object_type='P' and object_oid in (select Oid from pg_proc where propackageid = 0 and proname='proc1' and pronamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1()') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1()') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

 -- is clean
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
     schemaname      | packagename | type | name |                                                                  objnode                                                                  
---------------------+-------------+------+------+-------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null        |    3 | sr   | {DependenciesType :typType c :typCategory C :attrInfo a:pg_catalog.int4,b:pg_catalog.int4, :isRel false :elemTypName <> :idxByTypName <>}
(1 row)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
     schemaname      | packagename | objectname | refobjpos 
---------------------+-------------+------------+-----------
 plpgsql_depend_type | pkg         | tf1        |         1
(1 row)

--test 35 proc_param_type_used_undefine_pkg_type
drop type if exists sr cascade;
--?.*
drop package if exists pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
drop procedure if exists proc1;
NOTICE:  function proc1() does not exist, skipping
create or replace procedure proc1(v_1 pkg.arr1) as
begin 
    null;
end;
/
WARNING:  Type arr1 does not exist.
WARNING:  Type proc1(pg_catalog.undefined) depends on an undefined type.
WARNING:  The header information of function proc1 is not defined.
CONTEXT:  compilation of PL/pgSQL function "proc1" near line 1
WARNING:  Procedure created with compilation erors.
-- valid is true
select valid from pg_object where object_type='P' and object_oid in (select Oid from pg_proc where propackageid = 0 and proname='proc1' and pronamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(pg_catalog.undefined)') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(pg_catalog.undefined)') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |             on              | refpos |        refsn        | refpn |            refon            | refot |                                                                       refast                                                                       
---------------------+------+-----------------------------+--------+---------------------+-------+-----------------------------+-------+----------------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1(pg_catalog.undefined) |      4 | plpgsql_depend_type | pkg   | arr1                        |     3 | {DependenciesUndefined}
                     |      |                             |        | plpgsql_depend_type | null  | proc1(pg_catalog.undefined) |     5 | {DependenciesProchead :undefined true :proName proc1 :proArgSrc v_1\ pkg.arr1 :funcHeadSrc create\ or\ replace\ procedure\ proc1\(v_1\ pkg.arr1\)}
(2 rows)

 -- remove ref dependency
create or replace package pkg
is
    type tf1 is table of sr index by binary_integer;
    procedure proc1;
end pkg;
/
WARNING:  Type sr does not exist.
LINE 1:  PACKAGE  DECLARE  type tf1 is table of sr index by binary_i...
                                                ^
QUERY:   PACKAGE  DECLARE  type tf1 is table of sr index by binary_integer;
    procedure proc1;
end 
CONTEXT:  compilation of PL/pgSQL package near line 1
WARNING:  Package created with compilation erors.
select pr.proname, po.valid, pr.proargtypes, pr.proargsrc from pg_proc as pr inner join pg_object as po on po.object_type='P' and po.object_oid = pr.Oid where pr.propackageid=0 and pr.proname='proc1' and pr.pronamespace = (select Oid from pg_namespace where nspname='plpgsql_depend_type');
 proname | valid | proargtypes |  proargsrc   
---------+-------+-------------+--------------
 proc1   | f     | 4408        | v_1 pkg.arr1
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(pg_catalog.undefined)') or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(pg_catalog.undefined)') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |             on              | refpos |        refsn        | refpn |            refon            | refot |                                                                       refast                                                                       
---------------------+------+-----------------------------+--------+---------------------+-------+-----------------------------+-------+----------------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1(pg_catalog.undefined) |      4 | plpgsql_depend_type | pkg   | arr1                        |     3 | {DependenciesUndefined}
                     |      |                             |        | plpgsql_depend_type | null  | proc1(pg_catalog.undefined) |     5 | {DependenciesProchead :undefined true :proName proc1 :proArgSrc v_1\ pkg.arr1 :funcHeadSrc create\ or\ replace\ procedure\ proc1\(v_1\ pkg.arr1\)}
(2 rows)

select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |             on              | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+------+-----------------------------+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | null | proc1(pg_catalog.undefined) |      4 | plpgsql_depend_type | pkg   | arr1  |     3 | {DependenciesUndefined}
 plpgsql_depend_type | pkg  | tf1                         |      1 | plpgsql_depend_type | null  | sr    |     3 | {DependenciesUndefined}
(2 rows)

 -- create ref dependency
create or replace package pkg
is
    type arr1 is varray(888) of sr;
    procedure proc1;
end pkg;
/
WARNING:  Type sr does not exist.
LINE 1:  PACKAGE  DECLARE  type arr1 is varray(888) of sr;
                                                       ^
QUERY:   PACKAGE  DECLARE  type arr1 is varray(888) of sr;
    procedure proc1;
end 
CONTEXT:  compilation of PL/pgSQL package near line 1
WARNING:  Package created with compilation erors.
select pr.proname, po.valid, pr.proargtypes, pr.proargsrc from pg_proc as pr inner join pg_object as po on po.object_type='P' and po.object_oid = pr.Oid where pr.propackageid=0 and pr.proname='proc1' and pr.pronamespace = (select Oid from pg_namespace where nspname='plpgsql_depend_type');
 proname | valid | proargtypes |  proargsrc   
---------+-------+-------------+--------------
--?.*
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(plpgsql_depend_type.pkg.arr1)') or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(plpgsql_depend_type.pkg.arr1)') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |                 on                  | refpos |        refsn        | refpn |                refon                | refot |                                                                       refast                                                                        
---------------------+------+-------------------------------------+--------+---------------------+-------+-------------------------------------+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1(plpgsql_depend_type.pkg.arr1) |      4 | plpgsql_depend_type | pkg   | arr1                                |     3 | {DependenciesUndefined}
                     |      |                                     |        | plpgsql_depend_type | null  | proc1(plpgsql_depend_type.pkg.arr1) |     5 | {DependenciesProchead :undefined false :proName proc1 :proArgSrc v_1\ pkg.arr1 :funcHeadSrc create\ or\ replace\ procedure\ proc1\(v_1\ pkg.arr1\)}
(2 rows)

select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |                 on                  | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+------+-------------------------------------+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | pkg  | arr1                                |      1 | plpgsql_depend_type | null  | sr    |     3 | {DependenciesUndefined}
 plpgsql_depend_type | null | proc1(plpgsql_depend_type.pkg.arr1) |      4 | plpgsql_depend_type | pkg   | arr1  |     3 | {DependenciesUndefined}
(2 rows)

create type sr as (a int, b int);
select pr.proname, po.valid, pr.proargtypes, pr.proargsrc from pg_proc as pr inner join pg_object as po on po.object_type='P' and po.object_oid = pr.Oid where pr.propackageid=0 and pr.proname='proc1' and pr.pronamespace = (select Oid from pg_namespace where nspname='plpgsql_depend_type');
 proname | valid | proargtypes |  proargsrc   
---------+-------+-------------+--------------
 proc1   | f     | 4408        | v_1 pkg.arr1
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(plpgsql_depend_type.pkg.arr1)') or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(plpgsql_depend_type.pkg.arr1)') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |             on              | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+------+-----------------------------+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | null | proc1(pg_catalog.undefined) |      4 | plpgsql_depend_type | pkg   | arr1  |     3 | {DependenciesUndefined}
(1 row)

alter package pkg compile;
drop type sr;
ERROR:  cannot drop type sr because other objects depend on it
DETAIL:  type sr[] depends on type sr
HINT:  Use DROP ... CASCADE to drop the dependent objects too.
drop type sr cascade;
NOTICE:  drop cascades to type sr[]
select pr.proname, po.valid, pr.proargtypes, pr.proargsrc from pg_proc as pr inner join pg_object as po on po.object_type='P' and po.object_oid = pr.Oid where pr.propackageid=0 and pr.proname='proc1' and pr.pronamespace = (select Oid from pg_namespace where nspname='plpgsql_depend_type');
 proname | valid | proargtypes |  proargsrc   
---------+-------+-------------+--------------
 proc1   | f     | 4408        | v_1 pkg.arr1
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(plpgsql_depend_type.pkg.arr1)') or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(plpgsql_depend_type.pkg.arr1)') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

select valid from pg_object where object_type='S' and object_oid in (select Oid from gs_package where pkgname='pkg' and pkgnamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
 f
(1 row)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |             on              | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+------+-----------------------------+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | null | proc1(pg_catalog.undefined) |      4 | plpgsql_depend_type | pkg   | arr1  |     3 | {DependenciesUndefined}
(1 row)

drop package pkg;
NOTICE:  drop cascades to function plpgsql_depend_type.proc1()
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(plpgsql_depend_type.pkg.arr1)') or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(plpgsql_depend_type.pkg.arr1)') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |             on              | refpos |        refsn        | refpn | refon | refot |         refast          
---------------------+------+-----------------------------+--------+---------------------+-------+-------+-------+-------------------------
 plpgsql_depend_type | null | proc1(pg_catalog.undefined) |      4 | plpgsql_depend_type | pkg   | arr1  |     3 | {DependenciesUndefined}
(1 row)

-- remove dependency, no rows
drop procedure proc1;
select valid from pg_object where object_type='P' and object_oid in (select Oid from pg_proc where propackageid = 0 and proname='proc1' and pronamespace = (select Oid from pg_namespace where nspname = 'plpgsql_depend_type'));
 valid 
-------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(plpgsql_depend_type.pkg.arr1)') or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(plpgsql_depend_type.pkg.arr1)') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.packagename='pkg') or (b.schemaname='plpgsql_depend_type' and b.packagename='pkg') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

--test 36 schema_table_nest_record
create type ssr is (
    id integer,
    name varchar,
    addr text
);
create type stab is table of ssr;
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'stab') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

create or replace procedure proc1(a stab) as begin null; end;
/
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.objectname = 'stab') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos,
 b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast 
 from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid 
 where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(plpgsql_depend_type.stab)') 
 or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(plpgsql_depend_type.stab)') 
 order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |               on                | refpos |        refsn        | refpn |              refon              | refot |                                                                 refast                                                                  
---------------------+------+---------------------------------+--------+---------------------+-------+---------------------------------+-------+-----------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1(plpgsql_depend_type.stab) |      4 | plpgsql_depend_type | null  | stab                            |     3 | {DependenciesType :typType o :typCategory O :attrInfo <> :isRel false :elemTypName plpgsql_depend_type.ssr :idxByTypName <>}
                     |      |                                 |        | plpgsql_depend_type | null  | proc1(plpgsql_depend_type.stab) |     5 | {DependenciesProchead :undefined false :proName proc1 :proArgSrc a\ stab :funcHeadSrc create\ or\ replace\ procedure\ proc1\(a\ stab\)}
(2 rows)

select pr.proname, po.valid, pr.proargtypes, pr.proargsrc from pg_proc as pr inner join pg_object as po on po.object_type='P' and po.object_oid = pr.Oid where pr.propackageid=0 and pr.proname='proc1' and pr.pronamespace = (select Oid from pg_namespace where nspname='plpgsql_depend_type');
 proname | valid | proargtypes | proargsrc 
---------+-------+-------------+-----------
--?.*
(1 row)

create or replace procedure proc1(a ssr) as begin null; end;
/
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.objectname = 'stab') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(plpgsql_depend_type.ssr)') or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(plpgsql_depend_type.ssr)') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |               on               | refpos |        refsn        | refpn |             refon              | refot |                                                                                refast                                                                                 
---------------------+------+--------------------------------+--------+---------------------+-------+--------------------------------+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1(plpgsql_depend_type.ssr) |      4 | plpgsql_depend_type | null  | ssr                            |     3 | {DependenciesType :typType c :typCategory C :attrInfo id:pg_catalog.int4,name:pg_catalog.varchar,addr:pg_catalog.text, :isRel false :elemTypName <> :idxByTypName <>}
                     |      |                                |        | plpgsql_depend_type | null  | proc1(plpgsql_depend_type.ssr) |     5 | {DependenciesProchead :undefined false :proName proc1 :proArgSrc a\ ssr :funcHeadSrc create\ or\ replace\ procedure\ proc1\(a\ ssr\)}
(2 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(plpgsql_depend_type.stab)') or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(plpgsql_depend_type.stab)') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

select pr.proname, po.valid, pr.proargtypes, pr.proargsrc from pg_proc as pr inner join pg_object as po on po.object_type='P' and po.object_oid = pr.Oid where pr.propackageid=0 and pr.proname='proc1' and pr.pronamespace = (select Oid from pg_namespace where nspname='plpgsql_depend_type');
 proname | valid | proargtypes | proargsrc 
---------+-------+-------------+-----------
--?.*
(1 row)

drop type ssr;
ERROR:  cannot drop type ssr because other objects depend on it
DETAIL:  type stab depends on type ssr[]
HINT:  Use DROP ... CASCADE to drop the dependent objects too.
drop type ssr cascade;
NOTICE:  drop cascades to type stab
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.objectname = 'stab') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(plpgsql_depend_type.ssr)') or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(plpgsql_depend_type.ssr)') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(plpgsql_depend_type.stab)') or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(plpgsql_depend_type.stab)') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(pg_catalog.undefined)') or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(pg_catalog.undefined)') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |             on              | refpos |        refsn        | refpn |            refon            | refot |                                                                refast                                                                
---------------------+------+-----------------------------+--------+---------------------+-------+-----------------------------+-------+--------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1(pg_catalog.undefined) |      4 | plpgsql_depend_type | null  | ssr                         |     3 | {DependenciesUndefined}
                     |      |                             |        | plpgsql_depend_type | null  | proc1(pg_catalog.undefined) |     5 | {DependenciesProchead :undefined true :proName proc1 :proArgSrc a\ ssr :funcHeadSrc create\ or\ replace\ procedure\ proc1\(a\ ssr\)}
(2 rows)

select pr.proname, po.valid, pr.proargtypes, pr.proargsrc from pg_proc as pr inner join pg_object as po on po.object_type='P' and po.object_oid = pr.Oid where pr.propackageid=0 and pr.proname='proc1' and pr.pronamespace = (select Oid from pg_namespace where nspname='plpgsql_depend_type');
 proname | valid | proargtypes | proargsrc 
---------+-------+-------------+-----------
 proc1   | f     | 4408        | a ssr
(1 row)

create type ssr is (
    id integer,
    name varchar,
    addr text
);
create type stab is table of ssr;
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.objectname = 'stab') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(plpgsql_depend_type.ssr)') or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(plpgsql_depend_type.ssr)') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |               on               | refpos |        refsn        | refpn |             refon              | refot |                                                                                refast                                                                                 
---------------------+------+--------------------------------+--------+---------------------+-------+--------------------------------+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1(plpgsql_depend_type.ssr) |      4 | plpgsql_depend_type | null  | ssr                            |     3 | {DependenciesType :typType c :typCategory C :attrInfo id:pg_catalog.int4,name:pg_catalog.varchar,addr:pg_catalog.text, :isRel false :elemTypName <> :idxByTypName <>}
                     |      |                                |        | plpgsql_depend_type | null  | proc1(plpgsql_depend_type.ssr) |     5 | {DependenciesProchead :undefined false :proName proc1 :proArgSrc a\ ssr :funcHeadSrc create\ or\ replace\ procedure\ proc1\(a\ ssr\)}
(2 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(plpgsql_depend_type.stab)') or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(plpgsql_depend_type.stab)') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

select pr.proname, po.valid, pr.proargtypes, pr.proargsrc from pg_proc as pr inner join pg_object as po on po.object_type='P' and po.object_oid = pr.Oid where pr.propackageid=0 and pr.proname='proc1' and pr.pronamespace = (select Oid from pg_namespace where nspname='plpgsql_depend_type');
 proname | valid | proargtypes | proargsrc 
---------+-------+-------------+-----------
--?.*
(1 row)

drop procedure proc1;
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.objectname = 'stab') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(plpgsql_depend_type.ssr)') or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(plpgsql_depend_type.ssr)') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(plpgsql_depend_type.stab)') or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(plpgsql_depend_type.stab)') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

select pr.proname, po.valid, pr.proargtypes, pr.proargsrc from pg_proc as pr inner join pg_object as po on po.object_type='P' and po.object_oid = pr.Oid where pr.propackageid=0 and pr.proname='proc1' and pr.pronamespace = (select Oid from pg_namespace where nspname='plpgsql_depend_type');
 proname | valid | proargtypes | proargsrc 
---------+-------+-------------+-----------
(0 rows)

drop type ssr;
ERROR:  cannot drop type ssr because other objects depend on it
DETAIL:  type stab depends on type ssr[]
HINT:  Use DROP ... CASCADE to drop the dependent objects too.
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- is clean
drop type stab;
select * from gs_dependencies_obj where schemaname='plpgsql_depend_type' order by schemaname, packagename, name, type;
 schemaname | packagename | type | name | objnode 
------------+-------------+------+------+---------
(0 rows)

select schemaname, packagename, objectname, refobjpos from gs_dependencies where schemaname='plpgsql_depend_type' order by schemaname, packagename, objectname, refobjpos;
 schemaname | packagename | objectname | refobjpos 
------------+-------------+------------+-----------
(0 rows)

-- test 37
create type t2 as enum ('create', 'modify', 'closed');
alter type t2 rename value 'create' to 'newcreate';
create or replace procedure proc1(vb t2) as
declare
v_1 t2;
begin
null;
end;
/
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(plpgsql_depend_type.t2)') or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(plpgsql_depend_type.t2)') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |              on               | refpos |        refsn        | refpn |             refon             | refot |                                                                refast                                                                 
---------------------+------+-------------------------------+--------+---------------------+-------+-------------------------------+-------+---------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1(plpgsql_depend_type.t2) |      4 | plpgsql_depend_type | null  | t2                            |     3 | {DependenciesType :typType e :typCategory E :attrInfo newcreate,modify,closed, :isRel false :elemTypName <> :idxByTypName <>}
 plpgsql_depend_type | null | proc1(plpgsql_depend_type.t2) |      8 | plpgsql_depend_type | null  | t2                            |     3 | {DependenciesType :typType e :typCategory E :attrInfo newcreate,modify,closed, :isRel false :elemTypName <> :idxByTypName <>}
                     |      |                               |        | plpgsql_depend_type | null  | proc1(plpgsql_depend_type.t2) |     5 | {DependenciesProchead :undefined false :proName proc1 :proArgSrc vb\ t2 :funcHeadSrc create\ or\ replace\ procedure\ proc1\(vb\ t2\)}
(3 rows)

select pr.proname, po.valid, pr.proargtypes, pr.proargsrc from pg_proc as pr inner join pg_object as po on po.object_type='P' and po.object_oid = pr.Oid where pr.propackageid=0 and pr.proname='proc1' and pr.pronamespace = (select Oid from pg_namespace where nspname='plpgsql_depend_type');
 proname | valid | proargtypes | proargsrc 
---------+-------+-------------+-----------
--?.*
(1 row)

alter type t2 add value 'modif3' before 'closed';
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(plpgsql_depend_type.t2)') or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(plpgsql_depend_type.t2)') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
         sn          |  pn  |              on               | refpos |        refsn        | refpn |             refon             | refot |                                                                refast                                                                 
---------------------+------+-------------------------------+--------+---------------------+-------+-------------------------------+-------+---------------------------------------------------------------------------------------------------------------------------------------
 plpgsql_depend_type | null | proc1(plpgsql_depend_type.t2) |      4 | plpgsql_depend_type | null  | t2                            |     3 | {DependenciesType :typType e :typCategory E :attrInfo newcreate,modify,modif3,closed, :isRel false :elemTypName <> :idxByTypName <>}
 plpgsql_depend_type | null | proc1(plpgsql_depend_type.t2) |      8 | plpgsql_depend_type | null  | t2                            |     3 | {DependenciesType :typType e :typCategory E :attrInfo newcreate,modify,modif3,closed, :isRel false :elemTypName <> :idxByTypName <>}
                     |      |                               |        | plpgsql_depend_type | null  | proc1(plpgsql_depend_type.t2) |     5 | {DependenciesProchead :undefined false :proName proc1 :proArgSrc vb\ t2 :funcHeadSrc create\ or\ replace\ procedure\ proc1\(vb\ t2\)}
(3 rows)

select pr.proname, po.valid, pr.proargtypes, pr.proargsrc from pg_proc as pr inner join pg_object as po on po.object_type='P' and po.object_oid = pr.Oid where pr.propackageid=0 and pr.proname='proc1' and pr.pronamespace = (select Oid from pg_namespace where nspname='plpgsql_depend_type');
 proname | valid | proargtypes | proargsrc 
---------+-------+-------------+-----------
--?.*
(1 row)

alter type t2 rename to t3;
ERROR:  The rename operator of t2 is not allowed, because it is referenced by the other object.
drop type t2;
select a.schemaname as sn, a.packagename as pn, a.objectname as on, a.refobjpos as refpos, b.schemaname as refsn, b.packagename as refpn, b.name as refon, b.type as refot, b.objnode as refast from gs_dependencies as a right join gs_dependencies_obj as b on b.oid = a.refobjoid where (a.schemaname='plpgsql_depend_type' and a.objectname = 'proc1(plpgsql_depend_type.t2)') or (b.schemaname='plpgsql_depend_type' and b.name = 'proc1(plpgsql_depend_type.t2)') order by a.schemaname, a.objectname, a.refobjpos, b.type, b.name;
 sn | pn | on | refpos | refsn | refpn | refon | refot | refast 
----+----+----+--------+-------+-------+-------+-------+--------
(0 rows)

select pr.proname, po.valid, pr.proargtypes, pr.proargsrc from pg_proc as pr inner join pg_object as po on po.object_type='P' and po.object_oid = pr.Oid where pr.propackageid=0 and pr.proname='proc1' and pr.pronamespace = (select Oid from pg_namespace where nspname='plpgsql_depend_type');
 proname | valid | proargtypes | proargsrc 
---------+-------+-------------+-----------
 proc1   | f     | 4408        | vb t2
(1 row)

-- clean
drop schema plpgsql_depend_type cascade;
NOTICE:  drop cascades to 5 other objects
DETAIL:  drop cascades to function create_data_table()
drop cascades to function drop_data_table()
drop cascades to function drop_data_table_cascade()
drop cascades to type ssr
drop cascades to function proc1(undefined)
reset behavior_compat_options;